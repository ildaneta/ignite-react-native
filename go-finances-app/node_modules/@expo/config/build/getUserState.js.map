{"version":3,"file":"getUserState.js","sourceRoot":"","sources":["../src/getUserState.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;AAAA,gEAAuC;AACvC,mCAAiC;AACjC,2BAA6B;AAC7B,2CAA6B;AA6B7B,kEAAkE;AAClE,iDAAiD;AACjD,SAAgB,oBAAoB;IAClC,MAAM,IAAI,GAAG,YAAO,EAAE,CAAC;IAEvB,IAAI,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE;QAC5C,OAAO,OAAO,CAAC,GAAG,CAAC,4BAA4B,CAAC;KACjD;SAAM,IAAI,gBAAO,CAAC,cAAc,EAAE,KAAK,CAAC,EAAE;QACzC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,eAAe,CAAC,CAAC;KACzC;SAAM,IAAI,gBAAO,CAAC,YAAY,EAAE,KAAK,CAAC,EAAE;QACvC,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,aAAa,CAAC,CAAC;KACvC;IACD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE,OAAO,CAAC,CAAC;AAClC,CAAC;AAXD,oDAWC;AAED,SAAgB,gBAAgB;IAC9B,OAAO,IAAI,CAAC,IAAI,CAAC,oBAAoB,EAAE,EAAE,YAAY,CAAC,CAAC;AACzD,CAAC;AAFD,4CAEC;AAED,SAAgB,YAAY;IAC1B,OAAO,IAAI,mBAAQ,CAAmB,gBAAgB,EAAE,EAAE;QACxD,qBAAqB,EAAE,EAAE;QACzB,yEAAyE;QACzE,mBAAmB,EAAE,EAAE;KACxB,CAAC,CAAC;AACL,CAAC;AAND,oCAMC","sourcesContent":["import JsonFile from '@expo/json-file';\nimport { boolish } from 'getenv';\nimport { homedir } from 'os';\nimport * as path from 'path';\n\nexport type UserSettingsData = {\n  developmentCodeSigningId?: string;\n  appleId?: string;\n  accessToken?: string;\n  auth?: UserData | null;\n  ignoreBundledBinaries?: string[];\n  openDevToolsAtStartup?: boolean;\n  PATH?: string;\n  sendTo?: string;\n  uuid?: string;\n};\n\nexport type UserData = {\n  appleId?: string;\n  userId?: string;\n  username?: string;\n  currentConnection?: ConnectionType;\n  sessionSecret?: string;\n};\n\nexport type ConnectionType =\n  | 'Access-Token-Authentication'\n  | 'Username-Password-Authentication'\n  | 'facebook'\n  | 'google-oauth2'\n  | 'github';\n\n// The ~/.expo directory is used to store authentication sessions,\n// which are shared between EAS CLI and Expo CLI.\nexport function getExpoHomeDirectory() {\n  const home = homedir();\n\n  if (process.env.__UNSAFE_EXPO_HOME_DIRECTORY) {\n    return process.env.__UNSAFE_EXPO_HOME_DIRECTORY;\n  } else if (boolish('EXPO_STAGING', false)) {\n    return path.join(home, '.expo-staging');\n  } else if (boolish('EXPO_LOCAL', false)) {\n    return path.join(home, '.expo-local');\n  }\n  return path.join(home, '.expo');\n}\n\nexport function getUserStatePath() {\n  return path.join(getExpoHomeDirectory(), 'state.json');\n}\n\nexport function getUserState() {\n  return new JsonFile<UserSettingsData>(getUserStatePath(), {\n    jsonParseErrorDefault: {},\n    // This will ensure that an error isn't thrown if the file doesn't exist.\n    cantReadFileDefault: {},\n  });\n}\n"]}