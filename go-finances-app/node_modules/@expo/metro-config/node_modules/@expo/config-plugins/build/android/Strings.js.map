{"version":3,"sources":["../../src/android/Strings.ts"],"names":["getProjectStringsXMLPathAsync","projectRoot","kind","name","setStringItem","itemToAdd","stringFileContentsJSON","resources","string","stringNameExists","filter","e","$","_","concat","removeStringItem","named","findIndex","splice"],"mappings":";;;;;;;;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAGO,eAAeA,6BAAf,CACLC,WADK,EAEL;AAAEC,EAAAA;AAAF,IAAoC,EAF/B,EAGY;AACjB,SAAO,sCAAwBD,WAAxB,EAAqC;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,IAAI,EAAE;AAAd,GAArC,CAAP;AACD;;AAEM,SAASC,aAAT,CACLC,SADK,EAELC,sBAFK,EAGQ;AAAA;;AACb,MAAIA,sBAAJ,aAAIA,sBAAJ,wCAAIA,sBAAsB,CAAEC,SAA5B,kDAAI,sBAAmCC,MAAvC,EAA+C;AAC7C,UAAMC,gBAAgB,GAAGH,sBAAsB,CAACC,SAAvB,CAAiCC,MAAjC,CAAwCE,MAAxC,CACtBC,CAAD,IAAwBA,CAAC,CAACC,CAAF,CAAIT,IAAJ,KAAaE,SAAS,CAAC,CAAD,CAAT,CAAaO,CAAb,CAAeT,IAD7B,EAEvB,CAFuB,CAAzB;;AAGA,QAAIM,gBAAJ,EAAsB;AACpB;AACAA,MAAAA,gBAAgB,CAACI,CAAjB,GAAqBR,SAAS,CAAC,CAAD,CAAT,CAAaQ,CAAlC;AACD,KAHD,MAGO;AACLP,MAAAA,sBAAsB,CAACC,SAAvB,CAAiCC,MAAjC,GAA0CF,sBAAsB,CAACC,SAAvB,CAAiCC,MAAjC,CAAwCM,MAAxC,CACxCT,SADwC,CAA1C;AAGD;AACF,GAZD,MAYO;AACL,QAAI,CAACC,sBAAsB,CAACC,SAAxB,IAAqC,OAAOD,sBAAsB,CAACC,SAA9B,KAA4C,QAArF,EAA+F;AAC7F;AACAD,MAAAA,sBAAsB,CAACC,SAAvB,GAAmC,EAAnC;AACD;;AACDD,IAAAA,sBAAsB,CAACC,SAAvB,CAAiCC,MAAjC,GAA0CH,SAA1C;AACD;;AACD,SAAOC,sBAAP;AACD;;AAEM,SAASS,gBAAT,CAA0BC,KAA1B,EAAyCV,sBAAzC,EAA2F;AAAA;;AAChG,MAAIA,sBAAJ,aAAIA,sBAAJ,yCAAIA,sBAAsB,CAAEC,SAA5B,mDAAI,uBAAmCC,MAAvC,EAA+C;AAC7C,UAAMC,gBAAgB,GAAGH,sBAAsB,CAACC,SAAvB,CAAiCC,MAAjC,CAAwCS,SAAxC,CACtBN,CAAD,IAAwBA,CAAC,CAACC,CAAF,CAAIT,IAAJ,KAAaa,KADd,CAAzB;;AAGA,QAAIP,gBAAgB,GAAG,CAAC,CAAxB,EAA2B;AACzB;AACAH,MAAAA,sBAAsB,CAACC,SAAvB,CAAiCC,MAAjC,CAAwCU,MAAxC,CAA+CT,gBAA/C,EAAiE,CAAjE;AACD;AACF;;AACD,SAAOH,sBAAP;AACD","sourcesContent":["import { getResourceXMLPathAsync } from './Paths';\nimport { ResourceItemXML, ResourceKind, ResourceXML } from './Resources';\n\nexport async function getProjectStringsXMLPathAsync(\n  projectRoot: string,\n  { kind }: { kind?: ResourceKind } = {}\n): Promise<string> {\n  return getResourceXMLPathAsync(projectRoot, { kind, name: 'strings' });\n}\n\nexport function setStringItem(\n  itemToAdd: ResourceItemXML[],\n  stringFileContentsJSON: ResourceXML\n): ResourceXML {\n  if (stringFileContentsJSON?.resources?.string) {\n    const stringNameExists = stringFileContentsJSON.resources.string.filter(\n      (e: ResourceItemXML) => e.$.name === itemToAdd[0].$.name\n    )[0];\n    if (stringNameExists) {\n      // replace the previous value\n      stringNameExists._ = itemToAdd[0]._;\n    } else {\n      stringFileContentsJSON.resources.string = stringFileContentsJSON.resources.string.concat(\n        itemToAdd\n      );\n    }\n  } else {\n    if (!stringFileContentsJSON.resources || typeof stringFileContentsJSON.resources === 'string') {\n      // file was empty and JSON is `{resources : ''}`\n      stringFileContentsJSON.resources = {};\n    }\n    stringFileContentsJSON.resources.string = itemToAdd;\n  }\n  return stringFileContentsJSON;\n}\n\nexport function removeStringItem(named: string, stringFileContentsJSON: ResourceXML): ResourceXML {\n  if (stringFileContentsJSON?.resources?.string) {\n    const stringNameExists = stringFileContentsJSON.resources.string.findIndex(\n      (e: ResourceItemXML) => e.$.name === named\n    );\n    if (stringNameExists > -1) {\n      // replace the previous value\n      stringFileContentsJSON.resources.string.splice(stringNameExists, 1);\n    }\n  }\n  return stringFileContentsJSON;\n}\n"],"file":"Strings.js"}