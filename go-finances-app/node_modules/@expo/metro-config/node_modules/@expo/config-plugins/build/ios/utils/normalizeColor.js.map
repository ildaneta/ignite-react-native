{"version":3,"sources":["../../../src/ios/utils/normalizeColor.ts"],"names":["normalizeColorBase","color","matchers","getMatchers","match","hex6","exec","parseInt","names","hasOwnProperty","rgb","parse255","rgba","parse1","hex3","hex8","hex4","hsl","hslToRgb","parse360","parsePercentage","hsla","hue2rgb","p","q","t","h","s","l","r","g","b","Math","round","NUMBER","PERCENTAGE","call","args","join","cachedMatchers","undefined","RegExp","str","int","parseFloat","num","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","burntsienna","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","rebeccapurple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\n// Lifted from react-native/normalize-color but with flow removed and an entry point.\n\n/* eslint no-bitwise: 0 */\n\nfunction normalizeColorBase(color: string | number): null | number {\n  const matchers = getMatchers();\n  let match;\n\n  if (typeof color === 'number') {\n    if (color >>> 0 === color && color >= 0 && color <= 0xffffffff) {\n      return color;\n    }\n    return null;\n  }\n\n  if (typeof color !== 'string') {\n    return null;\n  }\n\n  // Ordered based on occurrences on Facebook codebase\n  if ((match = matchers.hex6.exec(color))) {\n    return parseInt(match[1] + 'ff', 16) >>> 0;\n  }\n\n  if (names.hasOwnProperty(color)) {\n    return names[color];\n  }\n\n  if ((match = matchers.rgb.exec(color))) {\n    return (\n      // b\n      ((parse255(match[1]) << 24) | // r\n        (parse255(match[2]) << 16) | // g\n        (parse255(match[3]) << 8) |\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  if ((match = matchers.rgba.exec(color))) {\n    return (\n      // b\n      ((parse255(match[1]) << 24) | // r\n        (parse255(match[2]) << 16) | // g\n        (parse255(match[3]) << 8) |\n        parse1(match[4])) >>> // a\n      0\n    );\n  }\n\n  if ((match = matchers.hex3.exec(color))) {\n    return (\n      parseInt(\n        match[1] +\n          match[1] + // r\n          match[2] +\n          match[2] + // g\n          match[3] +\n          match[3] + // b\n          'ff', // a\n        16\n      ) >>> 0\n    );\n  }\n\n  // https://drafts.csswg.org/css-color-4/#hex-notation\n  if ((match = matchers.hex8.exec(color))) {\n    return parseInt(match[1], 16) >>> 0;\n  }\n\n  if ((match = matchers.hex4.exec(color))) {\n    return (\n      parseInt(\n        match[1] +\n          match[1] + // r\n          match[2] +\n          match[2] + // g\n          match[3] +\n          match[3] + // b\n          match[4] +\n          match[4], // a\n        16\n      ) >>> 0\n    );\n  }\n\n  if ((match = matchers.hsl.exec(color))) {\n    return (\n      (hslToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // s\n        parsePercentage(match[3]) // l\n      ) |\n        0x000000ff) >>> // a\n      0\n    );\n  }\n\n  if ((match = matchers.hsla.exec(color))) {\n    return (\n      (hslToRgb(\n        parse360(match[1]), // h\n        parsePercentage(match[2]), // s\n        parsePercentage(match[3]) // l\n      ) |\n        parse1(match[4])) >>> // a\n      0\n    );\n  }\n\n  return null;\n}\n\nfunction hue2rgb(p: number, q: number, t: number): number {\n  if (t < 0) {\n    t += 1;\n  }\n  if (t > 1) {\n    t -= 1;\n  }\n  if (t < 1 / 6) {\n    return p + (q - p) * 6 * t;\n  }\n  if (t < 1 / 2) {\n    return q;\n  }\n  if (t < 2 / 3) {\n    return p + (q - p) * (2 / 3 - t) * 6;\n  }\n  return p;\n}\n\nfunction hslToRgb(h: number, s: number, l: number): number {\n  const q = l < 0.5 ? l * (1 + s) : l + s - l * s;\n  const p = 2 * l - q;\n  const r = hue2rgb(p, q, h + 1 / 3);\n  const g = hue2rgb(p, q, h);\n  const b = hue2rgb(p, q, h - 1 / 3);\n\n  return (Math.round(r * 255) << 24) | (Math.round(g * 255) << 16) | (Math.round(b * 255) << 8);\n}\n\n// var INTEGER = '[-+]?\\\\d+';\nconst NUMBER = '[-+]?\\\\d*\\\\.?\\\\d+';\nconst PERCENTAGE = NUMBER + '%';\n\nfunction call(...args: string[]) {\n  return '\\\\(\\\\s*(' + args.join(')\\\\s*,\\\\s*(') + ')\\\\s*\\\\)';\n}\n\nlet cachedMatchers: Record<string, RegExp>;\n\nfunction getMatchers() {\n  if (cachedMatchers === undefined) {\n    cachedMatchers = {\n      rgb: new RegExp('rgb' + call(NUMBER, NUMBER, NUMBER)),\n      rgba: new RegExp('rgba' + call(NUMBER, NUMBER, NUMBER, NUMBER)),\n      hsl: new RegExp('hsl' + call(NUMBER, PERCENTAGE, PERCENTAGE)),\n      hsla: new RegExp('hsla' + call(NUMBER, PERCENTAGE, PERCENTAGE, NUMBER)),\n      hex3: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex4: /^#([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})([0-9a-fA-F]{1})$/,\n      hex6: /^#([0-9a-fA-F]{6})$/,\n      hex8: /^#([0-9a-fA-F]{8})$/,\n    };\n  }\n  return cachedMatchers;\n}\n\nfunction parse255(str: string): number {\n  const int = parseInt(str, 10);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 255) {\n    return 255;\n  }\n  return int;\n}\n\nfunction parse360(str: string): number {\n  const int = parseFloat(str);\n  return (((int % 360) + 360) % 360) / 360;\n}\n\nfunction parse1(str: string): number {\n  const num = parseFloat(str);\n  if (num < 0) {\n    return 0;\n  }\n  if (num > 1) {\n    return 255;\n  }\n  return Math.round(num * 255);\n}\n\nfunction parsePercentage(str: string): number {\n  // parseFloat conveniently ignores the final %\n  const int = parseFloat(str);\n  if (int < 0) {\n    return 0;\n  }\n  if (int > 100) {\n    return 1;\n  }\n  return int / 100;\n}\n\nconst names: Record<string, number> = {\n  transparent: 0x00000000,\n\n  // http://www.w3.org/TR/css3-color/#svg-color\n  aliceblue: 0xf0f8ffff,\n  antiquewhite: 0xfaebd7ff,\n  aqua: 0x00ffffff,\n  aquamarine: 0x7fffd4ff,\n  azure: 0xf0ffffff,\n  beige: 0xf5f5dcff,\n  bisque: 0xffe4c4ff,\n  black: 0x000000ff,\n  blanchedalmond: 0xffebcdff,\n  blue: 0x0000ffff,\n  blueviolet: 0x8a2be2ff,\n  brown: 0xa52a2aff,\n  burlywood: 0xdeb887ff,\n  burntsienna: 0xea7e5dff,\n  cadetblue: 0x5f9ea0ff,\n  chartreuse: 0x7fff00ff,\n  chocolate: 0xd2691eff,\n  coral: 0xff7f50ff,\n  cornflowerblue: 0x6495edff,\n  cornsilk: 0xfff8dcff,\n  crimson: 0xdc143cff,\n  cyan: 0x00ffffff,\n  darkblue: 0x00008bff,\n  darkcyan: 0x008b8bff,\n  darkgoldenrod: 0xb8860bff,\n  darkgray: 0xa9a9a9ff,\n  darkgreen: 0x006400ff,\n  darkgrey: 0xa9a9a9ff,\n  darkkhaki: 0xbdb76bff,\n  darkmagenta: 0x8b008bff,\n  darkolivegreen: 0x556b2fff,\n  darkorange: 0xff8c00ff,\n  darkorchid: 0x9932ccff,\n  darkred: 0x8b0000ff,\n  darksalmon: 0xe9967aff,\n  darkseagreen: 0x8fbc8fff,\n  darkslateblue: 0x483d8bff,\n  darkslategray: 0x2f4f4fff,\n  darkslategrey: 0x2f4f4fff,\n  darkturquoise: 0x00ced1ff,\n  darkviolet: 0x9400d3ff,\n  deeppink: 0xff1493ff,\n  deepskyblue: 0x00bfffff,\n  dimgray: 0x696969ff,\n  dimgrey: 0x696969ff,\n  dodgerblue: 0x1e90ffff,\n  firebrick: 0xb22222ff,\n  floralwhite: 0xfffaf0ff,\n  forestgreen: 0x228b22ff,\n  fuchsia: 0xff00ffff,\n  gainsboro: 0xdcdcdcff,\n  ghostwhite: 0xf8f8ffff,\n  gold: 0xffd700ff,\n  goldenrod: 0xdaa520ff,\n  gray: 0x808080ff,\n  green: 0x008000ff,\n  greenyellow: 0xadff2fff,\n  grey: 0x808080ff,\n  honeydew: 0xf0fff0ff,\n  hotpink: 0xff69b4ff,\n  indianred: 0xcd5c5cff,\n  indigo: 0x4b0082ff,\n  ivory: 0xfffff0ff,\n  khaki: 0xf0e68cff,\n  lavender: 0xe6e6faff,\n  lavenderblush: 0xfff0f5ff,\n  lawngreen: 0x7cfc00ff,\n  lemonchiffon: 0xfffacdff,\n  lightblue: 0xadd8e6ff,\n  lightcoral: 0xf08080ff,\n  lightcyan: 0xe0ffffff,\n  lightgoldenrodyellow: 0xfafad2ff,\n  lightgray: 0xd3d3d3ff,\n  lightgreen: 0x90ee90ff,\n  lightgrey: 0xd3d3d3ff,\n  lightpink: 0xffb6c1ff,\n  lightsalmon: 0xffa07aff,\n  lightseagreen: 0x20b2aaff,\n  lightskyblue: 0x87cefaff,\n  lightslategray: 0x778899ff,\n  lightslategrey: 0x778899ff,\n  lightsteelblue: 0xb0c4deff,\n  lightyellow: 0xffffe0ff,\n  lime: 0x00ff00ff,\n  limegreen: 0x32cd32ff,\n  linen: 0xfaf0e6ff,\n  magenta: 0xff00ffff,\n  maroon: 0x800000ff,\n  mediumaquamarine: 0x66cdaaff,\n  mediumblue: 0x0000cdff,\n  mediumorchid: 0xba55d3ff,\n  mediumpurple: 0x9370dbff,\n  mediumseagreen: 0x3cb371ff,\n  mediumslateblue: 0x7b68eeff,\n  mediumspringgreen: 0x00fa9aff,\n  mediumturquoise: 0x48d1ccff,\n  mediumvioletred: 0xc71585ff,\n  midnightblue: 0x191970ff,\n  mintcream: 0xf5fffaff,\n  mistyrose: 0xffe4e1ff,\n  moccasin: 0xffe4b5ff,\n  navajowhite: 0xffdeadff,\n  navy: 0x000080ff,\n  oldlace: 0xfdf5e6ff,\n  olive: 0x808000ff,\n  olivedrab: 0x6b8e23ff,\n  orange: 0xffa500ff,\n  orangered: 0xff4500ff,\n  orchid: 0xda70d6ff,\n  palegoldenrod: 0xeee8aaff,\n  palegreen: 0x98fb98ff,\n  paleturquoise: 0xafeeeeff,\n  palevioletred: 0xdb7093ff,\n  papayawhip: 0xffefd5ff,\n  peachpuff: 0xffdab9ff,\n  peru: 0xcd853fff,\n  pink: 0xffc0cbff,\n  plum: 0xdda0ddff,\n  powderblue: 0xb0e0e6ff,\n  purple: 0x800080ff,\n  rebeccapurple: 0x663399ff,\n  red: 0xff0000ff,\n  rosybrown: 0xbc8f8fff,\n  royalblue: 0x4169e1ff,\n  saddlebrown: 0x8b4513ff,\n  salmon: 0xfa8072ff,\n  sandybrown: 0xf4a460ff,\n  seagreen: 0x2e8b57ff,\n  seashell: 0xfff5eeff,\n  sienna: 0xa0522dff,\n  silver: 0xc0c0c0ff,\n  skyblue: 0x87ceebff,\n  slateblue: 0x6a5acdff,\n  slategray: 0x708090ff,\n  slategrey: 0x708090ff,\n  snow: 0xfffafaff,\n  springgreen: 0x00ff7fff,\n  steelblue: 0x4682b4ff,\n  tan: 0xd2b48cff,\n  teal: 0x008080ff,\n  thistle: 0xd8bfd8ff,\n  tomato: 0xff6347ff,\n  turquoise: 0x40e0d0ff,\n  violet: 0xee82eeff,\n  wheat: 0xf5deb3ff,\n  white: 0xffffffff,\n  whitesmoke: 0xf5f5f5ff,\n  yellow: 0xffff00ff,\n  yellowgreen: 0x9acd32ff,\n};\n\nexport default normalizeColorBase;\n"],"file":"normalizeColor.js"}