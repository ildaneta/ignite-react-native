"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
const WarningAggregator = __importStar(require("../../utils/warnings"));
const createLegacyPlugin_1 = require("./createLegacyPlugin");
exports.default = createLegacyPlugin_1.createLegacyPlugin({
    packageName: 'expo-document-picker',
    fallback(config) {
        var _a;
        if ((_a = config.ios) === null || _a === void 0 ? void 0 : _a.usesIcloudStorage) {
            // TODO: need access to the appleTeamId for this one!
            WarningAggregator.addWarningIOS('ios.usesIcloudStorage', 'Install expo-document-picker to enable the ios.usesIcloudStorage feature'
            // TODO: add a link to a docs page with more information on how to do this
            );
        }
        return config;
    },
});
//# sourceMappingURL=expo-document-picker.js.map