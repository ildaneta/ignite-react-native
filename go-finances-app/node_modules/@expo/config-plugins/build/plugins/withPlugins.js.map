{"version":3,"file":"withPlugins.js","sourceRoot":"","sources":["../../src/plugins/withPlugins.ts"],"names":[],"mappings":";;;;;;AAAA,oDAA4B;AAG5B,yDAAsD;AAEtD;;;;;GAKG;AACI,MAAM,WAAW,GAA2D,CACjF,MAAM,EACN,OAAO,EACP,EAAE;IACF,gBAAM,CACJ,KAAK,CAAC,OAAO,CAAC,OAAO,CAAC,EACtB,sEAAsE,CACvE,CAAC;IACF,OAAO,OAAO,CAAC,MAAM,CAAC,CAAC,IAAI,EAAE,MAAM,EAAE,EAAE,CAAC,mCAAgB,CAAC,IAAI,EAAE,EAAE,MAAM,EAAE,CAAC,EAAE,MAAM,CAAC,CAAC;AACtF,CAAC,CAAC;AATW,QAAA,WAAW,eAStB","sourcesContent":["import assert from 'assert';\n\nimport { ConfigPlugin, StaticPlugin } from '../Plugin.types';\nimport { withStaticPlugin } from './withStaticPlugin';\n\n/**\n * Resolves a list of plugins.\n *\n * @param config exported config\n * @param plugins list of config config plugins to apply to the exported config\n */\nexport const withPlugins: ConfigPlugin<(StaticPlugin | ConfigPlugin | string)[]> = (\n  config,\n  plugins\n) => {\n  assert(\n    Array.isArray(plugins),\n    'withPlugins expected a valid array of plugins or plugin module paths'\n  );\n  return plugins.reduce((prev, plugin) => withStaticPlugin(prev, { plugin }), config);\n};\n"]}