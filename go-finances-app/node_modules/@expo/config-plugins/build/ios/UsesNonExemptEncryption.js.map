{"version":3,"file":"UsesNonExemptEncryption.js","sourceRoot":"","sources":["../../src/ios/UsesNonExemptEncryption.ts"],"names":[],"mappings":";;;AAEA,wDAA+D;AAGlD,QAAA,2BAA2B,GAAG,mCAAqB,CAC9D,0BAA0B,EAC1B,6BAA6B,CAC9B,CAAC;AAEF,SAAgB,0BAA0B,CAAC,MAA+B;;IACxE,OAAO,MAAA,MAAA,MAAA,MAAM,aAAN,MAAM,uBAAN,MAAM,CAAE,GAAG,0CAAE,MAAM,0CAAE,uBAAuB,mCAAI,IAAI,CAAC;AAC9D,CAAC;AAFD,gEAEC;AAED,SAAgB,0BAA0B,CACxC,MAA+B,EAC/B,EAAE,6BAA6B,EAAE,GAAG,SAAS,EAAa;IAE1D,MAAM,uBAAuB,GAAG,0BAA0B,CAAC,MAAM,CAAC,CAAC;IAEnE,2CAA2C;IAC3C,IAAI,uBAAuB,KAAK,IAAI,EAAE;QACpC,OAAO,SAAS,CAAC;KAClB;IAED,OAAO;QACL,GAAG,SAAS;QACZ,6BAA6B,EAAE,uBAAuB;KACvD,CAAC;AACJ,CAAC;AAfD,gEAeC","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { createInfoPlistPlugin } from '../plugins/ios-plugins';\nimport { InfoPlist } from './IosConfig.types';\n\nexport const withUsesNonExemptEncryption = createInfoPlistPlugin(\n  setUsesNonExemptEncryption,\n  'withUsesNonExemptEncryption'\n);\n\nexport function getUsesNonExemptEncryption(config: Pick<ExpoConfig, 'ios'>) {\n  return config?.ios?.config?.usesNonExemptEncryption ?? null;\n}\n\nexport function setUsesNonExemptEncryption(\n  config: Pick<ExpoConfig, 'ios'>,\n  { ITSAppUsesNonExemptEncryption, ...infoPlist }: InfoPlist\n): InfoPlist {\n  const usesNonExemptEncryption = getUsesNonExemptEncryption(config);\n\n  // Make no changes if the key is left blank\n  if (usesNonExemptEncryption === null) {\n    return infoPlist;\n  }\n\n  return {\n    ...infoPlist,\n    ITSAppUsesNonExemptEncryption: usesNonExemptEncryption,\n  };\n}\n"]}