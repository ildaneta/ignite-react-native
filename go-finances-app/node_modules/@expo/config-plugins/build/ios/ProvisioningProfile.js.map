{"version":3,"file":"ProvisioningProfile.js","sourceRoot":"","sources":["../../src/ios/ProvisioningProfile.ts"],"names":[],"mappings":";;;;;;AAAA,wDAA0B;AAE1B,qCAAyE;AACzE,iDAO2B;AAS3B,SAAgB,gCAAgC,CAC9C,WAAmB,EACnB,EACE,UAAU,EACV,WAAW,EACX,WAAW,EACX,kBAAkB,GAAG,SAAS,GACF;IAE9B,MAAM,OAAO,GAAG,sBAAU,CAAC,WAAW,CAAC,CAAC;IAExC,MAAM,iBAAiB,GAAG,UAAU;QAClC,CAAC,CAAC,+BAAsB,CAAC,OAAO,EAAE,UAAU,CAAC;QAC7C,CAAC,CAAC,8BAAqB,CAAC,OAAO,CAAC,CAAC;IACnC,MAAM,CAAC,cAAc,EAAE,YAAY,CAAC,GAAG,iBAAiB,CAAC;IAEzD,2CAA+B,CAAC,OAAO,EAAE,YAAY,CAAC,sBAAsB,CAAC;SAC1E,MAAM,CAAC,CAAC,CAAC,EAAE,IAAI,CAA4B,EAAE,EAAE,CAAC,IAAI,CAAC,IAAI,KAAK,kBAAkB,CAAC;SACjF,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAA4B,EAAE,EAAE;QAC/C,IAAI,CAAC,aAAa,CAAC,8BAA8B,GAAG,IAAI,WAAW,GAAG,CAAC;QACvE,IAAI,CAAC,aAAa,CAAC,gBAAgB,GAAG,WAAW,CAAC;QAClD,IAAI,CAAC,aAAa,CAAC,kBAAkB,GAAG,uBAAuB,CAAC;QAChE,IAAI,CAAC,aAAa,CAAC,eAAe,GAAG,QAAQ,CAAC;IAChD,CAAC,CAAC,CAAC;IAEL,MAAM,CAAC,OAAO,CAAC,6BAAiB,CAAC,OAAO,CAAC,CAAC;SACvC,MAAM,CAAC,wBAAY,CAAC;SACpB,OAAO,CAAC,CAAC,CAAC,EAAE,IAAI,CAAsB,EAAE,EAAE;QACzC,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,eAAe,GAAG,WAAW,CAAC;QAC/E,IAAI,CAAC,UAAU,CAAC,gBAAgB,CAAC,cAAc,CAAC,CAAC,iBAAiB,GAAG,QAAQ,CAAC;IAChF,CAAC,CAAC,CAAC;IAEL,kBAAE,CAAC,aAAa,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,CAAC,SAAS,EAAE,CAAC,CAAC;AAC1D,CAAC;AAjCD,4EAiCC","sourcesContent":["import fs from 'fs-extra';\n\nimport { findFirstNativeTarget, findNativeTargetByName } from './Target';\nimport {\n  ConfigurationSectionEntry,\n  getBuildConfigurationsForListId,\n  getPbxproj,\n  getProjectSection,\n  isNotComment,\n  ProjectSectionEntry,\n} from './utils/Xcodeproj';\n\ntype ProvisioningProfileSettings = {\n  targetName?: string;\n  appleTeamId: string;\n  profileName: string;\n  buildConfiguration?: string;\n};\n\nexport function setProvisioningProfileForPbxproj(\n  projectRoot: string,\n  {\n    targetName,\n    profileName,\n    appleTeamId,\n    buildConfiguration = 'Release',\n  }: ProvisioningProfileSettings\n): void {\n  const project = getPbxproj(projectRoot);\n\n  const nativeTargetEntry = targetName\n    ? findNativeTargetByName(project, targetName)\n    : findFirstNativeTarget(project);\n  const [nativeTargetId, nativeTarget] = nativeTargetEntry;\n\n  getBuildConfigurationsForListId(project, nativeTarget.buildConfigurationList)\n    .filter(([, item]: ConfigurationSectionEntry) => item.name === buildConfiguration)\n    .forEach(([, item]: ConfigurationSectionEntry) => {\n      item.buildSettings.PROVISIONING_PROFILE_SPECIFIER = `\"${profileName}\"`;\n      item.buildSettings.DEVELOPMENT_TEAM = appleTeamId;\n      item.buildSettings.CODE_SIGN_IDENTITY = '\"iPhone Distribution\"';\n      item.buildSettings.CODE_SIGN_STYLE = 'Manual';\n    });\n\n  Object.entries(getProjectSection(project))\n    .filter(isNotComment)\n    .forEach(([, item]: ProjectSectionEntry) => {\n      item.attributes.TargetAttributes[nativeTargetId].DevelopmentTeam = appleTeamId;\n      item.attributes.TargetAttributes[nativeTargetId].ProvisioningStyle = 'Manual';\n    });\n\n  fs.writeFileSync(project.filepath, project.writeSync());\n}\n"]}