{"version":3,"file":"Target.js","sourceRoot":"","sources":["../../src/ios/Target.ts"],"names":[],"mappings":"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","sourcesContent":["import { PBXTargetDependency, XcodeProject } from 'xcode';\n\nimport { getApplicationTargetNameForSchemeAsync } from './BuildScheme';\nimport { getPbxproj, isNotComment, NativeTargetSectionEntry } from './utils/Xcodeproj';\n\nexport enum TargetType {\n  APPLICATION = 'com.apple.product-type.application',\n  EXTENSION = 'com.apple.product-type.app-extension',\n  OTHER = 'other',\n}\n\nexport interface Target {\n  name: string;\n  type: TargetType;\n  dependencies?: Target[];\n}\n\nexport async function findApplicationTargetWithDependenciesAsync(\n  projectRoot: string,\n  scheme: string\n): Promise<Target> {\n  const applicationTargetName = await getApplicationTargetNameForSchemeAsync(projectRoot, scheme);\n  const project = getPbxproj(projectRoot);\n  const [, applicationTarget] = findNativeTargetByName(project, applicationTargetName);\n\n  const dependencies: Target[] = applicationTarget.dependencies.map(({ value }) => {\n    const { target: targetId } = project.getPBXGroupByKeyAndType(\n      value,\n      'PBXTargetDependency'\n    ) as PBXTargetDependency;\n\n    const [, target] = findNativeTargetById(project, targetId);\n\n    const type =\n      target.productType === TargetType.EXTENSION ||\n      target.productType === `\"${TargetType.EXTENSION}\"`\n        ? TargetType.EXTENSION\n        : TargetType.OTHER;\n    return {\n      name: target.name,\n      type,\n    };\n  });\n\n  return {\n    name: applicationTarget.name,\n    type: TargetType.APPLICATION,\n    dependencies,\n  };\n}\n\nexport function getNativeTargets(project: XcodeProject): NativeTargetSectionEntry[] {\n  const section = project.pbxNativeTargetSection();\n  return Object.entries(section).filter(isNotComment);\n}\n\nexport function findFirstNativeTarget(project: XcodeProject): NativeTargetSectionEntry {\n  const targets = getNativeTargets(project);\n  if (targets.length === 0) {\n    throw new Error(`Could not find any target in project.pbxproj`);\n  }\n  return targets[0];\n}\n\nexport function findNativeTargetByName(\n  project: XcodeProject,\n  targetName: string\n): NativeTargetSectionEntry {\n  const nativeTargets = getNativeTargets(project);\n  const nativeTargetEntry = nativeTargets.find(\n    ([, i]) => i.name === targetName || i.name === `\"${targetName}\"`\n  );\n  if (!nativeTargetEntry) {\n    throw new Error(`Could not find target '${targetName}' in project.pbxproj`);\n  }\n  return nativeTargetEntry;\n}\n\nfunction findNativeTargetById(project: XcodeProject, targetId: string): NativeTargetSectionEntry {\n  const nativeTargets = getNativeTargets(project);\n  const nativeTargetEntry = nativeTargets.find(([key]) => key === targetId);\n  if (!nativeTargetEntry) {\n    throw new Error(`Could not find target with id '${targetId}' in project.pbxproj`);\n  }\n  return nativeTargetEntry;\n}\n"]}