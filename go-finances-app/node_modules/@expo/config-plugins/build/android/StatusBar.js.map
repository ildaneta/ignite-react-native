{"version":3,"file":"StatusBar.js","sourceRoot":"","sources":["../../src/android/StatusBar.ts"],"names":[],"mappings":"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","sourcesContent":["import { ExpoConfig } from '@expo/config-types';\n\nimport { ConfigPlugin } from '../Plugin.types';\nimport { withDangerousMod } from '../plugins/withDangerousMod';\nimport { writeXMLAsync } from '../utils/XML';\nimport * as WarningAggregator from '../utils/warnings';\nimport { getProjectColorsXMLPathAsync, setColorItem } from './Colors';\nimport { buildResourceItem, readResourcesXMLAsync, ResourceItemXML } from './Resources';\nimport { getProjectStylesXMLPathAsync, setStylesItem } from './Styles';\n\nconst COLOR_PRIMARY_DARK_KEY = 'colorPrimaryDark';\nconst WINDOW_TRANSLUCENT_STATUS = 'android:windowTranslucentStatus';\nconst WINDOW_LIGHT_STATUS_BAR = 'android:windowLightStatusBar';\n\nexport const withStatusBar: ConfigPlugin = config => {\n  return withDangerousMod(config, [\n    'android',\n    async config => {\n      await setStatusBarConfig(config, config.modRequest.projectRoot);\n      return config;\n    },\n  ]);\n};\n\nexport function getStatusBarColor(\n  config: Pick<ExpoConfig, 'androidStatusBarColor' | 'androidStatusBar'>\n) {\n  if (config.androidStatusBarColor != null) {\n    WarningAggregator.addWarningAndroid(\n      'status-bar',\n      '`androidStatusBarColor` is deprecated, use `androidStatusBar.backgroundColor` instead.'\n    );\n  }\n  return config.androidStatusBar?.backgroundColor || 'translucent';\n}\n\nexport function getStatusBarStyle(config: Pick<ExpoConfig, 'androidStatusBar'>) {\n  return config.androidStatusBar?.barStyle || 'light-content';\n}\n\nexport async function setStatusBarConfig(\n  config: Pick<ExpoConfig, 'androidStatusBarColor' | 'androidStatusBar'>,\n  projectRoot: string\n) {\n  const hexString = getStatusBarColor(config);\n  const statusBarStyle = getStatusBarStyle(config);\n\n  const stylesPath = await getProjectStylesXMLPathAsync(projectRoot);\n  const colorsPath = await getProjectColorsXMLPathAsync(projectRoot);\n\n  let stylesJSON = await readResourcesXMLAsync({ path: stylesPath });\n  let colorsJSON = await readResourcesXMLAsync({ path: colorsPath });\n\n  let styleItemToAdd: ResourceItemXML;\n  if (hexString === 'translucent') {\n    // translucent status bar set in theme\n    styleItemToAdd = buildResourceItem({ name: WINDOW_TRANSLUCENT_STATUS, value: 'true' });\n  } else {\n    // Need to add a color key to colors.xml to use in styles.xml\n    const colorItemToAdd = buildResourceItem({ name: COLOR_PRIMARY_DARK_KEY, value: hexString });\n    colorsJSON = setColorItem(colorItemToAdd, colorsJSON);\n\n    styleItemToAdd = buildResourceItem({\n      name: COLOR_PRIMARY_DARK_KEY,\n      value: `@color/${COLOR_PRIMARY_DARK_KEY}`,\n    });\n  }\n\n  // Default is light-content, don't need to do anything to set it\n  if (statusBarStyle === 'dark-content') {\n    const statusBarStyleItem: ResourceItemXML = buildResourceItem({\n      name: WINDOW_LIGHT_STATUS_BAR,\n      value: `true`,\n    });\n    stylesJSON = setStylesItem({\n      item: statusBarStyleItem,\n      xml: stylesJSON,\n      parent: { name: 'AppTheme', parent: 'Theme.AppCompat.Light.NoActionBar' },\n    });\n  }\n\n  stylesJSON = setStylesItem({\n    item: styleItemToAdd,\n    xml: stylesJSON,\n    parent: { name: 'AppTheme', parent: 'Theme.AppCompat.Light.NoActionBar' },\n  });\n\n  try {\n    await Promise.all([\n      writeXMLAsync({ path: colorsPath, xml: colorsJSON }),\n      writeXMLAsync({ path: stylesPath, xml: stylesJSON }),\n    ]);\n  } catch (e) {\n    throw new Error(\n      `Error setting Android status bar config. Cannot write colors.xml to ${colorsPath}, or styles.xml to ${stylesPath}.`\n    );\n  }\n  return true;\n}\n"]}