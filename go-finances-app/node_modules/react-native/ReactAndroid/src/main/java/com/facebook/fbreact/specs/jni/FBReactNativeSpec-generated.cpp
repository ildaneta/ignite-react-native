/**
 * Copyright (c) Facebook, Inc. and its affiliates.
 *
 * This source code is licensed under the MIT license found in the
 * LICENSE file in the root directory of this source tree.
 *
 * @generated by an internal genrule from Flow types.
 *
 * We create an umbrella header (and corresponding implementation) here since
 * Cxx compilation in BUCK has a limitation: source-code producing genrule()s
 * must have a single output. More files => more genrule()s => slower builds.
 */
#import "FBReactNativeSpec.h"



namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeAccessibilityInfoSpecJSI_isReduceMotionEnabled(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "isReduceMotionEnabled", "(Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAccessibilityInfoSpecJSI_isTouchExplorationEnabled(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "isTouchExplorationEnabled", "(Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAccessibilityInfoSpecJSI_setAccessibilityFocus(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setAccessibilityFocus", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAccessibilityInfoSpecJSI_announceForAccessibility(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "announceForAccessibility", "(Ljava/lang/String;)V", args, count);
    }


    NativeAccessibilityInfoSpecJSI::NativeAccessibilityInfoSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("AccessibilityInfo", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["isReduceMotionEnabled"] = MethodMetadata {1, __hostFunction_NativeAccessibilityInfoSpecJSI_isReduceMotionEnabled};
        
        
        methodMap_["isTouchExplorationEnabled"] = MethodMetadata {1, __hostFunction_NativeAccessibilityInfoSpecJSI_isTouchExplorationEnabled};
        
        
        methodMap_["setAccessibilityFocus"] = MethodMetadata {1, __hostFunction_NativeAccessibilityInfoSpecJSI_setAccessibilityFocus};
        
        
        methodMap_["announceForAccessibility"] = MethodMetadata {1, __hostFunction_NativeAccessibilityInfoSpecJSI_announceForAccessibility};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeAccessibilityManagerSpecJSI_getCurrentBoldTextState(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "getCurrentBoldTextState", "(Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAccessibilityManagerSpecJSI_getCurrentGrayscaleState(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "getCurrentGrayscaleState", "(Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAccessibilityManagerSpecJSI_getCurrentInvertColorsState(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "getCurrentInvertColorsState", "(Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAccessibilityManagerSpecJSI_getCurrentReduceMotionState(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "getCurrentReduceMotionState", "(Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAccessibilityManagerSpecJSI_getCurrentReduceTransparencyState(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "getCurrentReduceTransparencyState", "(Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAccessibilityManagerSpecJSI_getCurrentVoiceOverState(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "getCurrentVoiceOverState", "(Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAccessibilityManagerSpecJSI_setAccessibilityContentSizeMultipliers(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setAccessibilityContentSizeMultipliers", "(Lcom/facebook/react/bridge/ReadableMap;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAccessibilityManagerSpecJSI_setAccessibilityFocus(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setAccessibilityFocus", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAccessibilityManagerSpecJSI_announceForAccessibility(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "announceForAccessibility", "(Ljava/lang/String;)V", args, count);
    }


    NativeAccessibilityManagerSpecJSI::NativeAccessibilityManagerSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("AccessibilityManager", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["getCurrentBoldTextState"] = MethodMetadata {2, __hostFunction_NativeAccessibilityManagerSpecJSI_getCurrentBoldTextState};
        
        
        methodMap_["getCurrentGrayscaleState"] = MethodMetadata {2, __hostFunction_NativeAccessibilityManagerSpecJSI_getCurrentGrayscaleState};
        
        
        methodMap_["getCurrentInvertColorsState"] = MethodMetadata {2, __hostFunction_NativeAccessibilityManagerSpecJSI_getCurrentInvertColorsState};
        
        
        methodMap_["getCurrentReduceMotionState"] = MethodMetadata {2, __hostFunction_NativeAccessibilityManagerSpecJSI_getCurrentReduceMotionState};
        
        
        methodMap_["getCurrentReduceTransparencyState"] = MethodMetadata {2, __hostFunction_NativeAccessibilityManagerSpecJSI_getCurrentReduceTransparencyState};
        
        
        methodMap_["getCurrentVoiceOverState"] = MethodMetadata {2, __hostFunction_NativeAccessibilityManagerSpecJSI_getCurrentVoiceOverState};
        
        
        methodMap_["setAccessibilityContentSizeMultipliers"] = MethodMetadata {1, __hostFunction_NativeAccessibilityManagerSpecJSI_setAccessibilityContentSizeMultipliers};
        
        
        methodMap_["setAccessibilityFocus"] = MethodMetadata {1, __hostFunction_NativeAccessibilityManagerSpecJSI_setAccessibilityFocus};
        
        
        methodMap_["announceForAccessibility"] = MethodMetadata {1, __hostFunction_NativeAccessibilityManagerSpecJSI_announceForAccessibility};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeActionSheetManagerSpecJSI_showActionSheetWithOptions(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "showActionSheetWithOptions", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeActionSheetManagerSpecJSI_showShareActionSheetWithOptions(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "showShareActionSheetWithOptions", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }


    NativeActionSheetManagerSpecJSI::NativeActionSheetManagerSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("ActionSheetManager", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["showActionSheetWithOptions"] = MethodMetadata {2, __hostFunction_NativeActionSheetManagerSpecJSI_showActionSheetWithOptions};
        
        
        methodMap_["showShareActionSheetWithOptions"] = MethodMetadata {3, __hostFunction_NativeActionSheetManagerSpecJSI_showShareActionSheetWithOptions};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeAlertManagerSpecJSI_alertWithArgs(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "alertWithArgs", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }


    NativeAlertManagerSpecJSI::NativeAlertManagerSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("AlertManager", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["alertWithArgs"] = MethodMetadata {2, __hostFunction_NativeAlertManagerSpecJSI_alertWithArgs};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_createAnimatedNode(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "createAnimatedNode", "(DLcom/facebook/react/bridge/ReadableMap;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_startListeningToAnimatedNodeValue(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "startListeningToAnimatedNodeValue", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_stopListeningToAnimatedNodeValue(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "stopListeningToAnimatedNodeValue", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_connectAnimatedNodes(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "connectAnimatedNodes", "(DD)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_disconnectAnimatedNodes(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "disconnectAnimatedNodes", "(DD)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_startAnimatingNode(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "startAnimatingNode", "(DDLcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_stopAnimation(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "stopAnimation", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_setAnimatedNodeValue(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setAnimatedNodeValue", "(DD)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_setAnimatedNodeOffset(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setAnimatedNodeOffset", "(DD)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_flattenAnimatedNodeOffset(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "flattenAnimatedNodeOffset", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_extractAnimatedNodeOffset(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "extractAnimatedNodeOffset", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_connectAnimatedNodeToView(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "connectAnimatedNodeToView", "(DD)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_disconnectAnimatedNodeFromView(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "disconnectAnimatedNodeFromView", "(DD)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_restoreDefaultValues(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "restoreDefaultValues", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_dropAnimatedNode(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "dropAnimatedNode", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_addAnimatedEventToView(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addAnimatedEventToView", "(DLjava/lang/String;Lcom/facebook/react/bridge/ReadableMap;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_removeAnimatedEventFromView(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeAnimatedEventFromView", "(DLjava/lang/String;D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimatedModuleSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count);
    }


    NativeAnimatedModuleSpecJSI::NativeAnimatedModuleSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("AnimatedModule", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["createAnimatedNode"] = MethodMetadata {2, __hostFunction_NativeAnimatedModuleSpecJSI_createAnimatedNode};
        
        
        methodMap_["startListeningToAnimatedNodeValue"] = MethodMetadata {1, __hostFunction_NativeAnimatedModuleSpecJSI_startListeningToAnimatedNodeValue};
        
        
        methodMap_["stopListeningToAnimatedNodeValue"] = MethodMetadata {1, __hostFunction_NativeAnimatedModuleSpecJSI_stopListeningToAnimatedNodeValue};
        
        
        methodMap_["connectAnimatedNodes"] = MethodMetadata {2, __hostFunction_NativeAnimatedModuleSpecJSI_connectAnimatedNodes};
        
        
        methodMap_["disconnectAnimatedNodes"] = MethodMetadata {2, __hostFunction_NativeAnimatedModuleSpecJSI_disconnectAnimatedNodes};
        
        
        methodMap_["startAnimatingNode"] = MethodMetadata {4, __hostFunction_NativeAnimatedModuleSpecJSI_startAnimatingNode};
        
        
        methodMap_["stopAnimation"] = MethodMetadata {1, __hostFunction_NativeAnimatedModuleSpecJSI_stopAnimation};
        
        
        methodMap_["setAnimatedNodeValue"] = MethodMetadata {2, __hostFunction_NativeAnimatedModuleSpecJSI_setAnimatedNodeValue};
        
        
        methodMap_["setAnimatedNodeOffset"] = MethodMetadata {2, __hostFunction_NativeAnimatedModuleSpecJSI_setAnimatedNodeOffset};
        
        
        methodMap_["flattenAnimatedNodeOffset"] = MethodMetadata {1, __hostFunction_NativeAnimatedModuleSpecJSI_flattenAnimatedNodeOffset};
        
        
        methodMap_["extractAnimatedNodeOffset"] = MethodMetadata {1, __hostFunction_NativeAnimatedModuleSpecJSI_extractAnimatedNodeOffset};
        
        
        methodMap_["connectAnimatedNodeToView"] = MethodMetadata {2, __hostFunction_NativeAnimatedModuleSpecJSI_connectAnimatedNodeToView};
        
        
        methodMap_["disconnectAnimatedNodeFromView"] = MethodMetadata {2, __hostFunction_NativeAnimatedModuleSpecJSI_disconnectAnimatedNodeFromView};
        
        
        methodMap_["restoreDefaultValues"] = MethodMetadata {1, __hostFunction_NativeAnimatedModuleSpecJSI_restoreDefaultValues};
        
        
        methodMap_["dropAnimatedNode"] = MethodMetadata {1, __hostFunction_NativeAnimatedModuleSpecJSI_dropAnimatedNode};
        
        
        methodMap_["addAnimatedEventToView"] = MethodMetadata {3, __hostFunction_NativeAnimatedModuleSpecJSI_addAnimatedEventToView};
        
        
        methodMap_["removeAnimatedEventFromView"] = MethodMetadata {3, __hostFunction_NativeAnimatedModuleSpecJSI_removeAnimatedEventFromView};
        
        
        methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeAnimatedModuleSpecJSI_addListener};
        
        
        methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeAnimatedModuleSpecJSI_removeListeners};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeAnimationsDebugModuleSpecJSI_startRecordingFps(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "startRecordingFps", "()V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAnimationsDebugModuleSpecJSI_stopRecordingFps(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "stopRecordingFps", "(D)V", args, count);
    }


    NativeAnimationsDebugModuleSpecJSI::NativeAnimationsDebugModuleSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("AnimationsDebugModule", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["startRecordingFps"] = MethodMetadata {0, __hostFunction_NativeAnimationsDebugModuleSpecJSI_startRecordingFps};
        
        
        methodMap_["stopRecordingFps"] = MethodMetadata {1, __hostFunction_NativeAnimationsDebugModuleSpecJSI_stopRecordingFps};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeAppStateSpecJSI_getCurrentAppState(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "getCurrentAppState", "(Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAppStateSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAppStateSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAppStateSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count);
    }


    NativeAppStateSpecJSI::NativeAppStateSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("AppState", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["getCurrentAppState"] = MethodMetadata {2, __hostFunction_NativeAppStateSpecJSI_getCurrentAppState};
        
        
        methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeAppStateSpecJSI_addListener};
        
        
        methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeAppStateSpecJSI_removeListeners};
        
        
        methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeAppStateSpecJSI_getConstants};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeAppearanceSpecJSI_getColorScheme(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, StringKind, "getColorScheme", "()Ljava/lang/String;", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAppearanceSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAppearanceSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count);
    }


    NativeAppearanceSpecJSI::NativeAppearanceSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("Appearance", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["getColorScheme"] = MethodMetadata {0, __hostFunction_NativeAppearanceSpecJSI_getColorScheme};
        
        
        methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeAppearanceSpecJSI_addListener};
        
        
        methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeAppearanceSpecJSI_removeListeners};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeAsyncStorageSpecJSI_multiGet(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "multiGet", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAsyncStorageSpecJSI_multiSet(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "multiSet", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAsyncStorageSpecJSI_multiMerge(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "multiMerge", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAsyncStorageSpecJSI_multiRemove(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "multiRemove", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAsyncStorageSpecJSI_clear(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "clear", "(Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeAsyncStorageSpecJSI_getAllKeys(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "getAllKeys", "(Lcom/facebook/react/bridge/Callback;)V", args, count);
    }


    NativeAsyncStorageSpecJSI::NativeAsyncStorageSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("AsyncStorage", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["multiGet"] = MethodMetadata {2, __hostFunction_NativeAsyncStorageSpecJSI_multiGet};
        
        
        methodMap_["multiSet"] = MethodMetadata {2, __hostFunction_NativeAsyncStorageSpecJSI_multiSet};
        
        
        methodMap_["multiMerge"] = MethodMetadata {2, __hostFunction_NativeAsyncStorageSpecJSI_multiMerge};
        
        
        methodMap_["multiRemove"] = MethodMetadata {2, __hostFunction_NativeAsyncStorageSpecJSI_multiRemove};
        
        
        methodMap_["clear"] = MethodMetadata {1, __hostFunction_NativeAsyncStorageSpecJSI_clear};
        
        
        methodMap_["getAllKeys"] = MethodMetadata {1, __hostFunction_NativeAsyncStorageSpecJSI_getAllKeys};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeBlobModuleSpecJSI_addNetworkingHandler(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addNetworkingHandler", "()V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeBlobModuleSpecJSI_addWebSocketHandler(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addWebSocketHandler", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeBlobModuleSpecJSI_removeWebSocketHandler(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeWebSocketHandler", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeBlobModuleSpecJSI_sendOverSocket(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "sendOverSocket", "(Lcom/facebook/react/bridge/ReadableMap;D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeBlobModuleSpecJSI_createFromParts(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "createFromParts", "(Lcom/facebook/react/bridge/ReadableArray;Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeBlobModuleSpecJSI_release(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "release", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeBlobModuleSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count);
    }


    NativeBlobModuleSpecJSI::NativeBlobModuleSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("BlobModule", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["addNetworkingHandler"] = MethodMetadata {0, __hostFunction_NativeBlobModuleSpecJSI_addNetworkingHandler};
        
        
        methodMap_["addWebSocketHandler"] = MethodMetadata {1, __hostFunction_NativeBlobModuleSpecJSI_addWebSocketHandler};
        
        
        methodMap_["removeWebSocketHandler"] = MethodMetadata {1, __hostFunction_NativeBlobModuleSpecJSI_removeWebSocketHandler};
        
        
        methodMap_["sendOverSocket"] = MethodMetadata {2, __hostFunction_NativeBlobModuleSpecJSI_sendOverSocket};
        
        
        methodMap_["createFromParts"] = MethodMetadata {2, __hostFunction_NativeBlobModuleSpecJSI_createFromParts};
        
        
        methodMap_["release"] = MethodMetadata {1, __hostFunction_NativeBlobModuleSpecJSI_release};
        
        
        methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeBlobModuleSpecJSI_getConstants};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeBugReportingSpecJSI_startReportAProblemFlow(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "startReportAProblemFlow", "()V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeBugReportingSpecJSI_setExtraData(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setExtraData", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/ReadableMap;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeBugReportingSpecJSI_setCategoryID(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setCategoryID", "(Ljava/lang/String;)V", args, count);
    }


    NativeBugReportingSpecJSI::NativeBugReportingSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("BugReporting", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["startReportAProblemFlow"] = MethodMetadata {0, __hostFunction_NativeBugReportingSpecJSI_startReportAProblemFlow};
        
        
        methodMap_["setExtraData"] = MethodMetadata {2, __hostFunction_NativeBugReportingSpecJSI_setExtraData};
        
        
        methodMap_["setCategoryID"] = MethodMetadata {1, __hostFunction_NativeBugReportingSpecJSI_setCategoryID};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeCameraRollManagerSpecJSI_getPhotos(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "getPhotos", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeCameraRollManagerSpecJSI_saveToCameraRoll(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "saveToCameraRoll", "(Ljava/lang/String;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeCameraRollManagerSpecJSI_deletePhotos(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "deletePhotos", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }


    NativeCameraRollManagerSpecJSI::NativeCameraRollManagerSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("CameraRollManager", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["getPhotos"] = MethodMetadata {1, __hostFunction_NativeCameraRollManagerSpecJSI_getPhotos};
        
        
        methodMap_["saveToCameraRoll"] = MethodMetadata {2, __hostFunction_NativeCameraRollManagerSpecJSI_saveToCameraRoll};
        
        
        methodMap_["deletePhotos"] = MethodMetadata {1, __hostFunction_NativeCameraRollManagerSpecJSI_deletePhotos};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeClipboardSpecJSI_getString(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "getString", "(Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeClipboardSpecJSI_setString(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setString", "(Ljava/lang/String;)V", args, count);
    }


    NativeClipboardSpecJSI::NativeClipboardSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("Clipboard", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["getString"] = MethodMetadata {0, __hostFunction_NativeClipboardSpecJSI_getString};
        
        
        methodMap_["setString"] = MethodMetadata {1, __hostFunction_NativeClipboardSpecJSI_setString};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeDatePickerAndroidSpecJSI_open(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "open", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }


    NativeDatePickerAndroidSpecJSI::NativeDatePickerAndroidSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("DatePickerAndroid", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["open"] = MethodMetadata {1, __hostFunction_NativeDatePickerAndroidSpecJSI_open};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeDevLoadingViewSpecJSI_showMessage(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "showMessage", "(Ljava/lang/String;Ljava/lang/Double;Ljava/lang/Double;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDevLoadingViewSpecJSI_hide(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "hide", "()V", args, count);
    }


    NativeDevLoadingViewSpecJSI::NativeDevLoadingViewSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("DevLoadingView", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["showMessage"] = MethodMetadata {3, __hostFunction_NativeDevLoadingViewSpecJSI_showMessage};
        
        
        methodMap_["hide"] = MethodMetadata {0, __hostFunction_NativeDevLoadingViewSpecJSI_hide};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeDevMenuSpecJSI_show(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "show", "()V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDevMenuSpecJSI_reload(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "reload", "()V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDevMenuSpecJSI_debugRemotely(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "debugRemotely", "(Z)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDevMenuSpecJSI_setProfilingEnabled(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setProfilingEnabled", "(Z)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDevMenuSpecJSI_setHotLoadingEnabled(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setHotLoadingEnabled", "(Z)V", args, count);
    }


    NativeDevMenuSpecJSI::NativeDevMenuSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("DevMenu", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["show"] = MethodMetadata {0, __hostFunction_NativeDevMenuSpecJSI_show};
        
        
        methodMap_["reload"] = MethodMetadata {0, __hostFunction_NativeDevMenuSpecJSI_reload};
        
        
        methodMap_["debugRemotely"] = MethodMetadata {1, __hostFunction_NativeDevMenuSpecJSI_debugRemotely};
        
        
        methodMap_["setProfilingEnabled"] = MethodMetadata {1, __hostFunction_NativeDevMenuSpecJSI_setProfilingEnabled};
        
        
        methodMap_["setHotLoadingEnabled"] = MethodMetadata {1, __hostFunction_NativeDevMenuSpecJSI_setHotLoadingEnabled};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeDevSettingsSpecJSI_reload(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "reload", "()V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDevSettingsSpecJSI_reloadWithReason(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "reloadWithReason", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDevSettingsSpecJSI_onFastRefresh(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "onFastRefresh", "()V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDevSettingsSpecJSI_setHotLoadingEnabled(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setHotLoadingEnabled", "(Z)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDevSettingsSpecJSI_setIsDebuggingRemotely(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setIsDebuggingRemotely", "(Z)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDevSettingsSpecJSI_setProfilingEnabled(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setProfilingEnabled", "(Z)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDevSettingsSpecJSI_toggleElementInspector(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "toggleElementInspector", "()V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDevSettingsSpecJSI_addMenuItem(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addMenuItem", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDevSettingsSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDevSettingsSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDevSettingsSpecJSI_setIsShakeToShowDevMenuEnabled(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setIsShakeToShowDevMenuEnabled", "(Z)V", args, count);
    }


    NativeDevSettingsSpecJSI::NativeDevSettingsSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("DevSettings", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["reload"] = MethodMetadata {0, __hostFunction_NativeDevSettingsSpecJSI_reload};
        
        
        methodMap_["reloadWithReason"] = MethodMetadata {1, __hostFunction_NativeDevSettingsSpecJSI_reloadWithReason};
        
        
        methodMap_["onFastRefresh"] = MethodMetadata {0, __hostFunction_NativeDevSettingsSpecJSI_onFastRefresh};
        
        
        methodMap_["setHotLoadingEnabled"] = MethodMetadata {1, __hostFunction_NativeDevSettingsSpecJSI_setHotLoadingEnabled};
        
        
        methodMap_["setIsDebuggingRemotely"] = MethodMetadata {1, __hostFunction_NativeDevSettingsSpecJSI_setIsDebuggingRemotely};
        
        
        methodMap_["setProfilingEnabled"] = MethodMetadata {1, __hostFunction_NativeDevSettingsSpecJSI_setProfilingEnabled};
        
        
        methodMap_["toggleElementInspector"] = MethodMetadata {0, __hostFunction_NativeDevSettingsSpecJSI_toggleElementInspector};
        
        
        methodMap_["addMenuItem"] = MethodMetadata {1, __hostFunction_NativeDevSettingsSpecJSI_addMenuItem};
        
        
        methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeDevSettingsSpecJSI_addListener};
        
        
        methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeDevSettingsSpecJSI_removeListeners};
        
        
        methodMap_["setIsShakeToShowDevMenuEnabled"] = MethodMetadata {1, __hostFunction_NativeDevSettingsSpecJSI_setIsShakeToShowDevMenuEnabled};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeDeviceEventManagerSpecJSI_invokeDefaultBackPressHandler(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "invokeDefaultBackPressHandler", "()V", args, count);
    }


    NativeDeviceEventManagerSpecJSI::NativeDeviceEventManagerSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("DeviceEventManager", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["invokeDefaultBackPressHandler"] = MethodMetadata {0, __hostFunction_NativeDeviceEventManagerSpecJSI_invokeDefaultBackPressHandler};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeDeviceInfoSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count);
    }


    NativeDeviceInfoSpecJSI::NativeDeviceInfoSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("DeviceInfo", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeDeviceInfoSpecJSI_getConstants};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeDialogManagerAndroidSpecJSI_showAlert(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "showAlert", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeDialogManagerAndroidSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count);
    }


    NativeDialogManagerAndroidSpecJSI::NativeDialogManagerAndroidSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("DialogManagerAndroid", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["showAlert"] = MethodMetadata {3, __hostFunction_NativeDialogManagerAndroidSpecJSI_showAlert};
        
        
        methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeDialogManagerAndroidSpecJSI_getConstants};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeExceptionsManagerSpecJSI_reportFatalException(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "reportFatalException", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableArray;D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeExceptionsManagerSpecJSI_reportSoftException(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "reportSoftException", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableArray;D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeExceptionsManagerSpecJSI_reportException(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "reportException", "(Lcom/facebook/react/bridge/ReadableMap;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeExceptionsManagerSpecJSI_updateExceptionMessage(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "updateExceptionMessage", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableArray;D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeExceptionsManagerSpecJSI_dismissRedbox(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "dismissRedbox", "()V", args, count);
    }


    NativeExceptionsManagerSpecJSI::NativeExceptionsManagerSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("ExceptionsManager", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["reportFatalException"] = MethodMetadata {3, __hostFunction_NativeExceptionsManagerSpecJSI_reportFatalException};
        
        
        methodMap_["reportSoftException"] = MethodMetadata {3, __hostFunction_NativeExceptionsManagerSpecJSI_reportSoftException};
        
        
        methodMap_["reportException"] = MethodMetadata {1, __hostFunction_NativeExceptionsManagerSpecJSI_reportException};
        
        
        methodMap_["updateExceptionMessage"] = MethodMetadata {3, __hostFunction_NativeExceptionsManagerSpecJSI_updateExceptionMessage};
        
        
        methodMap_["dismissRedbox"] = MethodMetadata {0, __hostFunction_NativeExceptionsManagerSpecJSI_dismissRedbox};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeFileReaderModuleSpecJSI_readAsDataURL(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "readAsDataURL", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeFileReaderModuleSpecJSI_readAsText(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "readAsText", "(Lcom/facebook/react/bridge/ReadableMap;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }


    NativeFileReaderModuleSpecJSI::NativeFileReaderModuleSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("FileReaderModule", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["readAsDataURL"] = MethodMetadata {1, __hostFunction_NativeFileReaderModuleSpecJSI_readAsDataURL};
        
        
        methodMap_["readAsText"] = MethodMetadata {2, __hostFunction_NativeFileReaderModuleSpecJSI_readAsText};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeFrameRateLoggerSpecJSI_setGlobalOptions(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setGlobalOptions", "(Lcom/facebook/react/bridge/ReadableMap;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeFrameRateLoggerSpecJSI_setContext(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setContext", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeFrameRateLoggerSpecJSI_beginScroll(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "beginScroll", "()V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeFrameRateLoggerSpecJSI_endScroll(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "endScroll", "()V", args, count);
    }


    NativeFrameRateLoggerSpecJSI::NativeFrameRateLoggerSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("FrameRateLogger", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["setGlobalOptions"] = MethodMetadata {1, __hostFunction_NativeFrameRateLoggerSpecJSI_setGlobalOptions};
        
        
        methodMap_["setContext"] = MethodMetadata {1, __hostFunction_NativeFrameRateLoggerSpecJSI_setContext};
        
        
        methodMap_["beginScroll"] = MethodMetadata {0, __hostFunction_NativeFrameRateLoggerSpecJSI_beginScroll};
        
        
        methodMap_["endScroll"] = MethodMetadata {0, __hostFunction_NativeFrameRateLoggerSpecJSI_endScroll};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeHeadlessJsTaskSupportSpecJSI_notifyTaskFinished(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "notifyTaskFinished", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeHeadlessJsTaskSupportSpecJSI_notifyTaskRetry(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "notifyTaskRetry", "(DLcom/facebook/react/bridge/Promise;)V", args, count);
    }


    NativeHeadlessJsTaskSupportSpecJSI::NativeHeadlessJsTaskSupportSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("HeadlessJsTaskSupport", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["notifyTaskFinished"] = MethodMetadata {1, __hostFunction_NativeHeadlessJsTaskSupportSpecJSI_notifyTaskFinished};
        
        
        methodMap_["notifyTaskRetry"] = MethodMetadata {1, __hostFunction_NativeHeadlessJsTaskSupportSpecJSI_notifyTaskRetry};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeI18nManagerSpecJSI_allowRTL(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "allowRTL", "(Z)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeI18nManagerSpecJSI_forceRTL(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "forceRTL", "(Z)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeI18nManagerSpecJSI_swapLeftAndRightInRTL(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "swapLeftAndRightInRTL", "(Z)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeI18nManagerSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count);
    }


    NativeI18nManagerSpecJSI::NativeI18nManagerSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("I18nManager", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["allowRTL"] = MethodMetadata {1, __hostFunction_NativeI18nManagerSpecJSI_allowRTL};
        
        
        methodMap_["forceRTL"] = MethodMetadata {1, __hostFunction_NativeI18nManagerSpecJSI_forceRTL};
        
        
        methodMap_["swapLeftAndRightInRTL"] = MethodMetadata {1, __hostFunction_NativeI18nManagerSpecJSI_swapLeftAndRightInRTL};
        
        
        methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeI18nManagerSpecJSI_getConstants};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeImageEditorSpecJSI_cropImage(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "cropImage", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }


    NativeImageEditorSpecJSI::NativeImageEditorSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("ImageEditor", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["cropImage"] = MethodMetadata {4, __hostFunction_NativeImageEditorSpecJSI_cropImage};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeImageLoaderAndroidSpecJSI_abortRequest(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "abortRequest", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeImageLoaderAndroidSpecJSI_getSize(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "getSize", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeImageLoaderAndroidSpecJSI_getSizeWithHeaders(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "getSizeWithHeaders", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeImageLoaderAndroidSpecJSI_prefetchImage(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "prefetchImage", "(Ljava/lang/String;DLcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeImageLoaderAndroidSpecJSI_queryCache(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "queryCache", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }


    NativeImageLoaderAndroidSpecJSI::NativeImageLoaderAndroidSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("ImageLoaderAndroid", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["abortRequest"] = MethodMetadata {1, __hostFunction_NativeImageLoaderAndroidSpecJSI_abortRequest};
        
        
        methodMap_["getSize"] = MethodMetadata {1, __hostFunction_NativeImageLoaderAndroidSpecJSI_getSize};
        
        
        methodMap_["getSizeWithHeaders"] = MethodMetadata {2, __hostFunction_NativeImageLoaderAndroidSpecJSI_getSizeWithHeaders};
        
        
        methodMap_["prefetchImage"] = MethodMetadata {2, __hostFunction_NativeImageLoaderAndroidSpecJSI_prefetchImage};
        
        
        methodMap_["queryCache"] = MethodMetadata {1, __hostFunction_NativeImageLoaderAndroidSpecJSI_queryCache};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeImageLoaderIOSSpecJSI_getSize(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "getSize", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeImageLoaderIOSSpecJSI_getSizeWithHeaders(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "getSizeWithHeaders", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeImageLoaderIOSSpecJSI_prefetchImage(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "prefetchImage", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeImageLoaderIOSSpecJSI_queryCache(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "queryCache", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }


    NativeImageLoaderIOSSpecJSI::NativeImageLoaderIOSSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("ImageLoaderIOS", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["getSize"] = MethodMetadata {1, __hostFunction_NativeImageLoaderIOSSpecJSI_getSize};
        
        
        methodMap_["getSizeWithHeaders"] = MethodMetadata {2, __hostFunction_NativeImageLoaderIOSSpecJSI_getSizeWithHeaders};
        
        
        methodMap_["prefetchImage"] = MethodMetadata {1, __hostFunction_NativeImageLoaderIOSSpecJSI_prefetchImage};
        
        
        methodMap_["queryCache"] = MethodMetadata {1, __hostFunction_NativeImageLoaderIOSSpecJSI_queryCache};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeImagePickerIOSSpecJSI_canRecordVideos(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "canRecordVideos", "(Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeImagePickerIOSSpecJSI_canUseCamera(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "canUseCamera", "(Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeImagePickerIOSSpecJSI_openCameraDialog(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "openCameraDialog", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeImagePickerIOSSpecJSI_openSelectDialog(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "openSelectDialog", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeImagePickerIOSSpecJSI_clearAllPendingVideos(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "clearAllPendingVideos", "()V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeImagePickerIOSSpecJSI_removePendingVideo(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removePendingVideo", "(Ljava/lang/String;)V", args, count);
    }


    NativeImagePickerIOSSpecJSI::NativeImagePickerIOSSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("ImagePickerIOS", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["canRecordVideos"] = MethodMetadata {1, __hostFunction_NativeImagePickerIOSSpecJSI_canRecordVideos};
        
        
        methodMap_["canUseCamera"] = MethodMetadata {1, __hostFunction_NativeImagePickerIOSSpecJSI_canUseCamera};
        
        
        methodMap_["openCameraDialog"] = MethodMetadata {3, __hostFunction_NativeImagePickerIOSSpecJSI_openCameraDialog};
        
        
        methodMap_["openSelectDialog"] = MethodMetadata {3, __hostFunction_NativeImagePickerIOSSpecJSI_openSelectDialog};
        
        
        methodMap_["clearAllPendingVideos"] = MethodMetadata {0, __hostFunction_NativeImagePickerIOSSpecJSI_clearAllPendingVideos};
        
        
        methodMap_["removePendingVideo"] = MethodMetadata {1, __hostFunction_NativeImagePickerIOSSpecJSI_removePendingVideo};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeImageStoreSpecJSI_getBase64ForTag(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "getBase64ForTag", "(Ljava/lang/String;Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeImageStoreSpecJSI_hasImageForTag(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "hasImageForTag", "(Ljava/lang/String;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeImageStoreSpecJSI_removeImageForTag(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeImageForTag", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeImageStoreSpecJSI_addImageFromBase64(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addImageFromBase64", "(Ljava/lang/String;Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }


    NativeImageStoreSpecJSI::NativeImageStoreSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("ImageStore", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["getBase64ForTag"] = MethodMetadata {3, __hostFunction_NativeImageStoreSpecJSI_getBase64ForTag};
        
        
        methodMap_["hasImageForTag"] = MethodMetadata {2, __hostFunction_NativeImageStoreSpecJSI_hasImageForTag};
        
        
        methodMap_["removeImageForTag"] = MethodMetadata {1, __hostFunction_NativeImageStoreSpecJSI_removeImageForTag};
        
        
        methodMap_["addImageFromBase64"] = MethodMetadata {3, __hostFunction_NativeImageStoreSpecJSI_addImageFromBase64};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeJSCHeapCaptureSpecJSI_captureComplete(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "captureComplete", "(Ljava/lang/String;Ljava/lang/String;)V", args, count);
    }


    NativeJSCHeapCaptureSpecJSI::NativeJSCHeapCaptureSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("JSCHeapCapture", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["captureComplete"] = MethodMetadata {2, __hostFunction_NativeJSCHeapCaptureSpecJSI_captureComplete};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeJSCSamplingProfilerSpecJSI_operationComplete(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "operationComplete", "(DLjava/lang/String;Ljava/lang/String;)V", args, count);
    }


    NativeJSCSamplingProfilerSpecJSI::NativeJSCSamplingProfilerSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("JSCSamplingProfiler", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["operationComplete"] = MethodMetadata {3, __hostFunction_NativeJSCSamplingProfilerSpecJSI_operationComplete};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeJSDevSupportSpecJSI_onSuccess(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "onSuccess", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeJSDevSupportSpecJSI_onFailure(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "onFailure", "(DLjava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeJSDevSupportSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count);
    }


    NativeJSDevSupportSpecJSI::NativeJSDevSupportSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("JSDevSupport", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["onSuccess"] = MethodMetadata {1, __hostFunction_NativeJSDevSupportSpecJSI_onSuccess};
        
        
        methodMap_["onFailure"] = MethodMetadata {2, __hostFunction_NativeJSDevSupportSpecJSI_onFailure};
        
        
        methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeJSDevSupportSpecJSI_getConstants};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeKeyboardObserverSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeKeyboardObserverSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count);
    }


    NativeKeyboardObserverSpecJSI::NativeKeyboardObserverSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("KeyboardObserver", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeKeyboardObserverSpecJSI_addListener};
        
        
        methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeKeyboardObserverSpecJSI_removeListeners};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeLinkingSpecJSI_getInitialURL(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "getInitialURL", "(Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeLinkingSpecJSI_canOpenURL(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "canOpenURL", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeLinkingSpecJSI_openURL(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "openURL", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeLinkingSpecJSI_openSettings(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "openSettings", "(Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeLinkingSpecJSI_sendIntent(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "sendIntent", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeLinkingSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeLinkingSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count);
    }


    NativeLinkingSpecJSI::NativeLinkingSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("Linking", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["getInitialURL"] = MethodMetadata {0, __hostFunction_NativeLinkingSpecJSI_getInitialURL};
        
        
        methodMap_["canOpenURL"] = MethodMetadata {1, __hostFunction_NativeLinkingSpecJSI_canOpenURL};
        
        
        methodMap_["openURL"] = MethodMetadata {1, __hostFunction_NativeLinkingSpecJSI_openURL};
        
        
        methodMap_["openSettings"] = MethodMetadata {0, __hostFunction_NativeLinkingSpecJSI_openSettings};
        
        
        methodMap_["sendIntent"] = MethodMetadata {2, __hostFunction_NativeLinkingSpecJSI_sendIntent};
        
        
        methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeLinkingSpecJSI_addListener};
        
        
        methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeLinkingSpecJSI_removeListeners};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeLogBoxSpecJSI_show(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "show", "()V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeLogBoxSpecJSI_hide(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "hide", "()V", args, count);
    }


    NativeLogBoxSpecJSI::NativeLogBoxSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("LogBox", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["show"] = MethodMetadata {0, __hostFunction_NativeLogBoxSpecJSI_show};
        
        
        methodMap_["hide"] = MethodMetadata {0, __hostFunction_NativeLogBoxSpecJSI_hide};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeModalManagerSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeModalManagerSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count);
    }


    NativeModalManagerSpecJSI::NativeModalManagerSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("ModalManager", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeModalManagerSpecJSI_addListener};
        
        
        methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeModalManagerSpecJSI_removeListeners};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeNetworkingAndroidSpecJSI_sendRequest(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "sendRequest", "(Ljava/lang/String;Ljava/lang/String;DLcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/ReadableMap;Ljava/lang/String;ZDZ)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkingAndroidSpecJSI_abortRequest(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "abortRequest", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkingAndroidSpecJSI_clearCookies(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "clearCookies", "(Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkingAndroidSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkingAndroidSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count);
    }


    NativeNetworkingAndroidSpecJSI::NativeNetworkingAndroidSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("NetworkingAndroid", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["sendRequest"] = MethodMetadata {9, __hostFunction_NativeNetworkingAndroidSpecJSI_sendRequest};
        
        
        methodMap_["abortRequest"] = MethodMetadata {1, __hostFunction_NativeNetworkingAndroidSpecJSI_abortRequest};
        
        
        methodMap_["clearCookies"] = MethodMetadata {1, __hostFunction_NativeNetworkingAndroidSpecJSI_clearCookies};
        
        
        methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeNetworkingAndroidSpecJSI_addListener};
        
        
        methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeNetworkingAndroidSpecJSI_removeListeners};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeNetworkingIOSSpecJSI_sendRequest(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "sendRequest", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkingIOSSpecJSI_abortRequest(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "abortRequest", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkingIOSSpecJSI_clearCookies(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "clearCookies", "(Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkingIOSSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeNetworkingIOSSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count);
    }


    NativeNetworkingIOSSpecJSI::NativeNetworkingIOSSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("NetworkingIOS", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["sendRequest"] = MethodMetadata {2, __hostFunction_NativeNetworkingIOSSpecJSI_sendRequest};
        
        
        methodMap_["abortRequest"] = MethodMetadata {1, __hostFunction_NativeNetworkingIOSSpecJSI_abortRequest};
        
        
        methodMap_["clearCookies"] = MethodMetadata {1, __hostFunction_NativeNetworkingIOSSpecJSI_clearCookies};
        
        
        methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeNetworkingIOSSpecJSI_addListener};
        
        
        methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeNetworkingIOSSpecJSI_removeListeners};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativePermissionsAndroidSpecJSI_checkPermission(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "checkPermission", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePermissionsAndroidSpecJSI_requestPermission(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "requestPermission", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePermissionsAndroidSpecJSI_shouldShowRequestPermissionRationale(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "shouldShowRequestPermissionRationale", "(Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePermissionsAndroidSpecJSI_requestMultiplePermissions(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "requestMultiplePermissions", "(Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }


    NativePermissionsAndroidSpecJSI::NativePermissionsAndroidSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("PermissionsAndroid", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["checkPermission"] = MethodMetadata {1, __hostFunction_NativePermissionsAndroidSpecJSI_checkPermission};
        
        
        methodMap_["requestPermission"] = MethodMetadata {1, __hostFunction_NativePermissionsAndroidSpecJSI_requestPermission};
        
        
        methodMap_["shouldShowRequestPermissionRationale"] = MethodMetadata {1, __hostFunction_NativePermissionsAndroidSpecJSI_shouldShowRequestPermissionRationale};
        
        
        methodMap_["requestMultiplePermissions"] = MethodMetadata {1, __hostFunction_NativePermissionsAndroidSpecJSI_requestMultiplePermissions};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativePlatformConstantsAndroidSpecJSI_getAndroidID(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, StringKind, "getAndroidID", "()Ljava/lang/String;", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePlatformConstantsAndroidSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count);
    }


    NativePlatformConstantsAndroidSpecJSI::NativePlatformConstantsAndroidSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("PlatformConstantsAndroid", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["getAndroidID"] = MethodMetadata {0, __hostFunction_NativePlatformConstantsAndroidSpecJSI_getAndroidID};
        
        
        methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativePlatformConstantsAndroidSpecJSI_getConstants};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativePlatformConstantsIOSSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count);
    }


    NativePlatformConstantsIOSSpecJSI::NativePlatformConstantsIOSSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("PlatformConstantsIOS", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativePlatformConstantsIOSSpecJSI_getConstants};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativePushNotificationManagerIOSSpecJSI_onFinishRemoteNotification(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "onFinishRemoteNotification", "(Ljava/lang/String;Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePushNotificationManagerIOSSpecJSI_setApplicationIconBadgeNumber(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setApplicationIconBadgeNumber", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePushNotificationManagerIOSSpecJSI_getApplicationIconBadgeNumber(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "getApplicationIconBadgeNumber", "(Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePushNotificationManagerIOSSpecJSI_requestPermissions(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "requestPermissions", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePushNotificationManagerIOSSpecJSI_abandonPermissions(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "abandonPermissions", "()V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePushNotificationManagerIOSSpecJSI_checkPermissions(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "checkPermissions", "(Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePushNotificationManagerIOSSpecJSI_presentLocalNotification(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "presentLocalNotification", "(Lcom/facebook/react/bridge/ReadableMap;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePushNotificationManagerIOSSpecJSI_scheduleLocalNotification(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "scheduleLocalNotification", "(Lcom/facebook/react/bridge/ReadableMap;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePushNotificationManagerIOSSpecJSI_cancelAllLocalNotifications(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "cancelAllLocalNotifications", "()V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePushNotificationManagerIOSSpecJSI_cancelLocalNotifications(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "cancelLocalNotifications", "(Lcom/facebook/react/bridge/ReadableMap;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePushNotificationManagerIOSSpecJSI_getInitialNotification(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "getInitialNotification", "(Lcom/facebook/react/bridge/Promise;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePushNotificationManagerIOSSpecJSI_getScheduledLocalNotifications(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "getScheduledLocalNotifications", "(Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePushNotificationManagerIOSSpecJSI_removeAllDeliveredNotifications(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeAllDeliveredNotifications", "()V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePushNotificationManagerIOSSpecJSI_removeDeliveredNotifications(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeDeliveredNotifications", "(Lcom/facebook/react/bridge/ReadableArray;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePushNotificationManagerIOSSpecJSI_getDeliveredNotifications(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "getDeliveredNotifications", "(Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePushNotificationManagerIOSSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativePushNotificationManagerIOSSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count);
    }


    NativePushNotificationManagerIOSSpecJSI::NativePushNotificationManagerIOSSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("PushNotificationManagerIOS", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["onFinishRemoteNotification"] = MethodMetadata {2, __hostFunction_NativePushNotificationManagerIOSSpecJSI_onFinishRemoteNotification};
        
        
        methodMap_["setApplicationIconBadgeNumber"] = MethodMetadata {1, __hostFunction_NativePushNotificationManagerIOSSpecJSI_setApplicationIconBadgeNumber};
        
        
        methodMap_["getApplicationIconBadgeNumber"] = MethodMetadata {1, __hostFunction_NativePushNotificationManagerIOSSpecJSI_getApplicationIconBadgeNumber};
        
        
        methodMap_["requestPermissions"] = MethodMetadata {1, __hostFunction_NativePushNotificationManagerIOSSpecJSI_requestPermissions};
        
        
        methodMap_["abandonPermissions"] = MethodMetadata {0, __hostFunction_NativePushNotificationManagerIOSSpecJSI_abandonPermissions};
        
        
        methodMap_["checkPermissions"] = MethodMetadata {1, __hostFunction_NativePushNotificationManagerIOSSpecJSI_checkPermissions};
        
        
        methodMap_["presentLocalNotification"] = MethodMetadata {1, __hostFunction_NativePushNotificationManagerIOSSpecJSI_presentLocalNotification};
        
        
        methodMap_["scheduleLocalNotification"] = MethodMetadata {1, __hostFunction_NativePushNotificationManagerIOSSpecJSI_scheduleLocalNotification};
        
        
        methodMap_["cancelAllLocalNotifications"] = MethodMetadata {0, __hostFunction_NativePushNotificationManagerIOSSpecJSI_cancelAllLocalNotifications};
        
        
        methodMap_["cancelLocalNotifications"] = MethodMetadata {1, __hostFunction_NativePushNotificationManagerIOSSpecJSI_cancelLocalNotifications};
        
        
        methodMap_["getInitialNotification"] = MethodMetadata {0, __hostFunction_NativePushNotificationManagerIOSSpecJSI_getInitialNotification};
        
        
        methodMap_["getScheduledLocalNotifications"] = MethodMetadata {1, __hostFunction_NativePushNotificationManagerIOSSpecJSI_getScheduledLocalNotifications};
        
        
        methodMap_["removeAllDeliveredNotifications"] = MethodMetadata {0, __hostFunction_NativePushNotificationManagerIOSSpecJSI_removeAllDeliveredNotifications};
        
        
        methodMap_["removeDeliveredNotifications"] = MethodMetadata {1, __hostFunction_NativePushNotificationManagerIOSSpecJSI_removeDeliveredNotifications};
        
        
        methodMap_["getDeliveredNotifications"] = MethodMetadata {1, __hostFunction_NativePushNotificationManagerIOSSpecJSI_getDeliveredNotifications};
        
        
        methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativePushNotificationManagerIOSSpecJSI_addListener};
        
        
        methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativePushNotificationManagerIOSSpecJSI_removeListeners};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeRedBoxSpecJSI_setExtraData(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setExtraData", "(Lcom/facebook/react/bridge/ReadableMap;Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeRedBoxSpecJSI_dismiss(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "dismiss", "()V", args, count);
    }


    NativeRedBoxSpecJSI::NativeRedBoxSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("RedBox", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["setExtraData"] = MethodMetadata {2, __hostFunction_NativeRedBoxSpecJSI_setExtraData};
        
        
        methodMap_["dismiss"] = MethodMetadata {0, __hostFunction_NativeRedBoxSpecJSI_dismiss};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeSegmentFetcherSpecJSI_fetchSegment(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "fetchSegment", "(DLcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSegmentFetcherSpecJSI_getSegment(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "getSegment", "(DLcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }


    NativeSegmentFetcherSpecJSI::NativeSegmentFetcherSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("SegmentFetcher", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["fetchSegment"] = MethodMetadata {3, __hostFunction_NativeSegmentFetcherSpecJSI_fetchSegment};
        
        
        methodMap_["getSegment"] = MethodMetadata {3, __hostFunction_NativeSegmentFetcherSpecJSI_getSegment};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeSettingsManagerSpecJSI_setValues(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setValues", "(Lcom/facebook/react/bridge/ReadableMap;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSettingsManagerSpecJSI_deleteValues(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "deleteValues", "(Lcom/facebook/react/bridge/ReadableArray;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeSettingsManagerSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count);
    }


    NativeSettingsManagerSpecJSI::NativeSettingsManagerSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("SettingsManager", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["setValues"] = MethodMetadata {1, __hostFunction_NativeSettingsManagerSpecJSI_setValues};
        
        
        methodMap_["deleteValues"] = MethodMetadata {1, __hostFunction_NativeSettingsManagerSpecJSI_deleteValues};
        
        
        methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeSettingsManagerSpecJSI_getConstants};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeShareModuleSpecJSI_share(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "share", "(Lcom/facebook/react/bridge/ReadableMap;Ljava/lang/String;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }


    NativeShareModuleSpecJSI::NativeShareModuleSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("ShareModule", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["share"] = MethodMetadata {2, __hostFunction_NativeShareModuleSpecJSI_share};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeSoundManagerSpecJSI_playTouchSound(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "playTouchSound", "()V", args, count);
    }


    NativeSoundManagerSpecJSI::NativeSoundManagerSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("SoundManager", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["playTouchSound"] = MethodMetadata {0, __hostFunction_NativeSoundManagerSpecJSI_playTouchSound};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeSourceCodeSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count);
    }


    NativeSourceCodeSpecJSI::NativeSourceCodeSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("SourceCode", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeSourceCodeSpecJSI_getConstants};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeStatusBarManagerAndroidSpecJSI_setColor(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setColor", "(DZ)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeStatusBarManagerAndroidSpecJSI_setTranslucent(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setTranslucent", "(Z)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeStatusBarManagerAndroidSpecJSI_setStyle(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setStyle", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeStatusBarManagerAndroidSpecJSI_setHidden(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setHidden", "(Z)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeStatusBarManagerAndroidSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count);
    }


    NativeStatusBarManagerAndroidSpecJSI::NativeStatusBarManagerAndroidSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("StatusBarManagerAndroid", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["setColor"] = MethodMetadata {2, __hostFunction_NativeStatusBarManagerAndroidSpecJSI_setColor};
        
        
        methodMap_["setTranslucent"] = MethodMetadata {1, __hostFunction_NativeStatusBarManagerAndroidSpecJSI_setTranslucent};
        
        
        methodMap_["setStyle"] = MethodMetadata {1, __hostFunction_NativeStatusBarManagerAndroidSpecJSI_setStyle};
        
        
        methodMap_["setHidden"] = MethodMetadata {1, __hostFunction_NativeStatusBarManagerAndroidSpecJSI_setHidden};
        
        
        methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeStatusBarManagerAndroidSpecJSI_getConstants};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeStatusBarManagerIOSSpecJSI_getHeight(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "getHeight", "(Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeStatusBarManagerIOSSpecJSI_setNetworkActivityIndicatorVisible(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setNetworkActivityIndicatorVisible", "(Z)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeStatusBarManagerIOSSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeStatusBarManagerIOSSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeStatusBarManagerIOSSpecJSI_setStyle(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setStyle", "(Ljava/lang/String;Z)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeStatusBarManagerIOSSpecJSI_setHidden(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setHidden", "(ZLjava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeStatusBarManagerIOSSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count);
    }


    NativeStatusBarManagerIOSSpecJSI::NativeStatusBarManagerIOSSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("StatusBarManagerIOS", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["getHeight"] = MethodMetadata {1, __hostFunction_NativeStatusBarManagerIOSSpecJSI_getHeight};
        
        
        methodMap_["setNetworkActivityIndicatorVisible"] = MethodMetadata {1, __hostFunction_NativeStatusBarManagerIOSSpecJSI_setNetworkActivityIndicatorVisible};
        
        
        methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeStatusBarManagerIOSSpecJSI_addListener};
        
        
        methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeStatusBarManagerIOSSpecJSI_removeListeners};
        
        
        methodMap_["setStyle"] = MethodMetadata {2, __hostFunction_NativeStatusBarManagerIOSSpecJSI_setStyle};
        
        
        methodMap_["setHidden"] = MethodMetadata {2, __hostFunction_NativeStatusBarManagerIOSSpecJSI_setHidden};
        
        
        methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeStatusBarManagerIOSSpecJSI_getConstants};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeTVNavigationEventEmitterSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTVNavigationEventEmitterSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count);
    }


    NativeTVNavigationEventEmitterSpecJSI::NativeTVNavigationEventEmitterSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("TVNavigationEventEmitter", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeTVNavigationEventEmitterSpecJSI_addListener};
        
        
        methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeTVNavigationEventEmitterSpecJSI_removeListeners};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeTimePickerAndroidSpecJSI_open(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, PromiseKind, "open", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Promise;)V", args, count);
    }


    NativeTimePickerAndroidSpecJSI::NativeTimePickerAndroidSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("TimePickerAndroid", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["open"] = MethodMetadata {1, __hostFunction_NativeTimePickerAndroidSpecJSI_open};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeTimingSpecJSI_createTimer(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "createTimer", "(DDDZ)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTimingSpecJSI_deleteTimer(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "deleteTimer", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeTimingSpecJSI_setSendIdleEvents(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setSendIdleEvents", "(Z)V", args, count);
    }


    NativeTimingSpecJSI::NativeTimingSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("Timing", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["createTimer"] = MethodMetadata {4, __hostFunction_NativeTimingSpecJSI_createTimer};
        
        
        methodMap_["deleteTimer"] = MethodMetadata {1, __hostFunction_NativeTimingSpecJSI_deleteTimer};
        
        
        methodMap_["setSendIdleEvents"] = MethodMetadata {1, __hostFunction_NativeTimingSpecJSI_setSendIdleEvents};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeToastAndroidSpecJSI_show(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "show", "(Ljava/lang/String;D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeToastAndroidSpecJSI_showWithGravity(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "showWithGravity", "(Ljava/lang/String;DD)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeToastAndroidSpecJSI_showWithGravityAndOffset(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "showWithGravityAndOffset", "(Ljava/lang/String;DDDD)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeToastAndroidSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count);
    }


    NativeToastAndroidSpecJSI::NativeToastAndroidSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("ToastAndroid", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["show"] = MethodMetadata {2, __hostFunction_NativeToastAndroidSpecJSI_show};
        
        
        methodMap_["showWithGravity"] = MethodMetadata {3, __hostFunction_NativeToastAndroidSpecJSI_showWithGravity};
        
        
        methodMap_["showWithGravityAndOffset"] = MethodMetadata {5, __hostFunction_NativeToastAndroidSpecJSI_showWithGravityAndOffset};
        
        
        methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeToastAndroidSpecJSI_getConstants};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_getConstantsForViewManager(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstantsForViewManager", "(Ljava/lang/String;)Lcom/facebook/react/bridge/WritableMap;", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_getDefaultEventTypes(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, ArrayKind, "getDefaultEventTypes", "()Lcom/facebook/react/bridge/WritableArray;", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_playTouchSound(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "playTouchSound", "()V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_lazilyLoadView(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, ObjectKind, "lazilyLoadView", "(Ljava/lang/String;)Lcom/facebook/react/bridge/WritableMap;", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_createView(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "createView", "(Ljava/lang/Double;Ljava/lang/String;DLcom/facebook/react/bridge/ReadableMap;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_updateView(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "updateView", "(DLjava/lang/String;Lcom/facebook/react/bridge/ReadableMap;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_focus(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "focus", "(Ljava/lang/Double;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_blur(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "blur", "(Ljava/lang/Double;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_findSubviewIn(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "findSubviewIn", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_dispatchViewManagerCommand(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "dispatchViewManagerCommand", "(Ljava/lang/Double;DLcom/facebook/react/bridge/ReadableArray;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_measure(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "measure", "(Ljava/lang/Double;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_measureInWindow(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "measureInWindow", "(Ljava/lang/Double;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_viewIsDescendantOf(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "viewIsDescendantOf", "(Ljava/lang/Double;Ljava/lang/Double;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_measureLayout(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "measureLayout", "(Ljava/lang/Double;Ljava/lang/Double;Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_measureLayoutRelativeToParent(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "measureLayoutRelativeToParent", "(Ljava/lang/Double;Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_setJSResponder(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setJSResponder", "(Ljava/lang/Double;Z)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_clearJSResponder(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "clearJSResponder", "()V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_configureNextLayoutAnimation(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "configureNextLayoutAnimation", "(Lcom/facebook/react/bridge/ReadableMap;Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_removeSubviewsFromContainerWithID(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeSubviewsFromContainerWithID", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_replaceExistingNonRootView(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "replaceExistingNonRootView", "(Ljava/lang/Double;Ljava/lang/Double;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_setChildren(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setChildren", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableArray;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_manageChildren(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "manageChildren", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/ReadableArray;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_setLayoutAnimationEnabledExperimental(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "setLayoutAnimationEnabledExperimental", "(Z)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_sendAccessibilityEvent(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "sendAccessibilityEvent", "(Ljava/lang/Double;D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_showPopupMenu(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "showPopupMenu", "(Ljava/lang/Double;Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/Callback;Lcom/facebook/react/bridge/Callback;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_dismissPopupMenu(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "dismissPopupMenu", "()V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeUIManagerSpecJSI_getConstants(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, ObjectKind, "getConstants", "()Ljava/util/Map;", args, count);
    }


    NativeUIManagerSpecJSI::NativeUIManagerSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("UIManager", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["getConstantsForViewManager"] = MethodMetadata {1, __hostFunction_NativeUIManagerSpecJSI_getConstantsForViewManager};
        
        
        methodMap_["getDefaultEventTypes"] = MethodMetadata {0, __hostFunction_NativeUIManagerSpecJSI_getDefaultEventTypes};
        
        
        methodMap_["playTouchSound"] = MethodMetadata {0, __hostFunction_NativeUIManagerSpecJSI_playTouchSound};
        
        
        methodMap_["lazilyLoadView"] = MethodMetadata {1, __hostFunction_NativeUIManagerSpecJSI_lazilyLoadView};
        
        
        methodMap_["createView"] = MethodMetadata {4, __hostFunction_NativeUIManagerSpecJSI_createView};
        
        
        methodMap_["updateView"] = MethodMetadata {3, __hostFunction_NativeUIManagerSpecJSI_updateView};
        
        
        methodMap_["focus"] = MethodMetadata {1, __hostFunction_NativeUIManagerSpecJSI_focus};
        
        
        methodMap_["blur"] = MethodMetadata {1, __hostFunction_NativeUIManagerSpecJSI_blur};
        
        
        methodMap_["findSubviewIn"] = MethodMetadata {3, __hostFunction_NativeUIManagerSpecJSI_findSubviewIn};
        
        
        methodMap_["dispatchViewManagerCommand"] = MethodMetadata {3, __hostFunction_NativeUIManagerSpecJSI_dispatchViewManagerCommand};
        
        
        methodMap_["measure"] = MethodMetadata {2, __hostFunction_NativeUIManagerSpecJSI_measure};
        
        
        methodMap_["measureInWindow"] = MethodMetadata {2, __hostFunction_NativeUIManagerSpecJSI_measureInWindow};
        
        
        methodMap_["viewIsDescendantOf"] = MethodMetadata {3, __hostFunction_NativeUIManagerSpecJSI_viewIsDescendantOf};
        
        
        methodMap_["measureLayout"] = MethodMetadata {4, __hostFunction_NativeUIManagerSpecJSI_measureLayout};
        
        
        methodMap_["measureLayoutRelativeToParent"] = MethodMetadata {3, __hostFunction_NativeUIManagerSpecJSI_measureLayoutRelativeToParent};
        
        
        methodMap_["setJSResponder"] = MethodMetadata {2, __hostFunction_NativeUIManagerSpecJSI_setJSResponder};
        
        
        methodMap_["clearJSResponder"] = MethodMetadata {0, __hostFunction_NativeUIManagerSpecJSI_clearJSResponder};
        
        
        methodMap_["configureNextLayoutAnimation"] = MethodMetadata {3, __hostFunction_NativeUIManagerSpecJSI_configureNextLayoutAnimation};
        
        
        methodMap_["removeSubviewsFromContainerWithID"] = MethodMetadata {1, __hostFunction_NativeUIManagerSpecJSI_removeSubviewsFromContainerWithID};
        
        
        methodMap_["replaceExistingNonRootView"] = MethodMetadata {2, __hostFunction_NativeUIManagerSpecJSI_replaceExistingNonRootView};
        
        
        methodMap_["setChildren"] = MethodMetadata {2, __hostFunction_NativeUIManagerSpecJSI_setChildren};
        
        
        methodMap_["manageChildren"] = MethodMetadata {6, __hostFunction_NativeUIManagerSpecJSI_manageChildren};
        
        
        methodMap_["setLayoutAnimationEnabledExperimental"] = MethodMetadata {1, __hostFunction_NativeUIManagerSpecJSI_setLayoutAnimationEnabledExperimental};
        
        
        methodMap_["sendAccessibilityEvent"] = MethodMetadata {2, __hostFunction_NativeUIManagerSpecJSI_sendAccessibilityEvent};
        
        
        methodMap_["showPopupMenu"] = MethodMetadata {4, __hostFunction_NativeUIManagerSpecJSI_showPopupMenu};
        
        
        methodMap_["dismissPopupMenu"] = MethodMetadata {0, __hostFunction_NativeUIManagerSpecJSI_dismissPopupMenu};
        
        
        methodMap_["getConstants"] = MethodMetadata {0, __hostFunction_NativeUIManagerSpecJSI_getConstants};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeVibrationSpecJSI_vibrate(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "vibrate", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeVibrationSpecJSI_vibrateByPattern(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "vibrateByPattern", "(Lcom/facebook/react/bridge/ReadableArray;D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeVibrationSpecJSI_cancel(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "cancel", "()V", args, count);
    }


    NativeVibrationSpecJSI::NativeVibrationSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("Vibration", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["vibrate"] = MethodMetadata {1, __hostFunction_NativeVibrationSpecJSI_vibrate};
        
        
        methodMap_["vibrateByPattern"] = MethodMetadata {2, __hostFunction_NativeVibrationSpecJSI_vibrateByPattern};
        
        
        methodMap_["cancel"] = MethodMetadata {0, __hostFunction_NativeVibrationSpecJSI_cancel};
        
        

    }

  } // namespace react
} // namespace facebook
namespace facebook {
  namespace react {

    
    static facebook::jsi::Value __hostFunction_NativeWebSocketModuleSpecJSI_connect(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "connect", "(Ljava/lang/String;Lcom/facebook/react/bridge/ReadableArray;Lcom/facebook/react/bridge/ReadableMap;D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeWebSocketModuleSpecJSI_send(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "send", "(Ljava/lang/String;D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeWebSocketModuleSpecJSI_sendBinary(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "sendBinary", "(Ljava/lang/String;D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeWebSocketModuleSpecJSI_ping(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "ping", "(D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeWebSocketModuleSpecJSI_close(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "close", "(DLjava/lang/String;D)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeWebSocketModuleSpecJSI_addListener(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "addListener", "(Ljava/lang/String;)V", args, count);
    }

    static facebook::jsi::Value __hostFunction_NativeWebSocketModuleSpecJSI_removeListeners(facebook::jsi::Runtime& rt, TurboModule &turboModule, const facebook::jsi::Value* args, size_t count) {
      return static_cast<JavaTurboModule&>(turboModule).invokeJavaMethod(rt, VoidKind, "removeListeners", "(D)V", args, count);
    }


    NativeWebSocketModuleSpecJSI::NativeWebSocketModuleSpecJSI(jni::alias_ref<JTurboModule> instance, std::shared_ptr<CallInvoker> jsInvoker, std::shared_ptr<CallInvoker> nativeInvoker)
      : JavaTurboModule("WebSocketModule", instance, jsInvoker, nativeInvoker) {
        
        methodMap_["connect"] = MethodMetadata {4, __hostFunction_NativeWebSocketModuleSpecJSI_connect};
        
        
        methodMap_["send"] = MethodMetadata {2, __hostFunction_NativeWebSocketModuleSpecJSI_send};
        
        
        methodMap_["sendBinary"] = MethodMetadata {2, __hostFunction_NativeWebSocketModuleSpecJSI_sendBinary};
        
        
        methodMap_["ping"] = MethodMetadata {1, __hostFunction_NativeWebSocketModuleSpecJSI_ping};
        
        
        methodMap_["close"] = MethodMetadata {3, __hostFunction_NativeWebSocketModuleSpecJSI_close};
        
        
        methodMap_["addListener"] = MethodMetadata {1, __hostFunction_NativeWebSocketModuleSpecJSI_addListener};
        
        
        methodMap_["removeListeners"] = MethodMetadata {1, __hostFunction_NativeWebSocketModuleSpecJSI_removeListeners};
        
        

    }

  } // namespace react
} // namespace facebook
